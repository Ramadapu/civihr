!function(t,o){function n(o){o&&o.departments&&o.departments.length>0?t(".crm-contact-detail-departments").html("<strong>Department:</strong> "+o.departments.join(", ")):t(".crm-contact-detail-departments").html("")}t(document).on("crmLoad",function(o){t(".crm-inline-edit").one("DOMSubtreeModified",function(){var o=t(this).find("form");1===o.length&&o.find("label").each(function(){var o=t(this),n=o.attr("for");t("#"+n).attr("placeholder",o.text())})})}).on("updateContactHeader",function(o,c){var a;void 0!==c.contract&&((a=c.contract)?(t(".crm-summary-contactname-block").removeClass("crm-summary-contactname-block-without-contract"),a.position&&t(".crm-contact-detail-position").html("<strong>Position:</strong> "+a.position),a.location&&t(".crm-contact-detail-location").html("<strong>Normal place of work:</strong> "+a.location)):(t(".crm-summary-contactname-block").addClass("crm-summary-contactname-block-without-contract"),t(".crm-contact-detail-position").html(""),t(".crm-contact-detail-location").html(""),n(null))),void 0!==c.roles&&n(c.roles)})}(CRM.$,CRM._);
!function(e,t){function a(){var t=e(this)[0].files[0];e("#js-uploaded-file").remove(),void 0!==t&&(e(this).after('<span id="js-uploaded-file" class="uploaded-file">'+t.name+' <span class="uploaded-file-icon-trash"><i class="fa fa-trash-o"></i> Remove</span>'),e(".uploaded-file-icon-trash").on("click",i))}function o(e){e.find("label").attr("for",e.find(".crm-form-date").attr("id"))}function i(){var t=e("#js-uploaded-file").parent().find('input[type="file"]');e("#js-uploaded-file").remove(),t.val("")}e(document).on("crmLoad",function(t){var i,r,n;1===e(i="input[type='file']").length&&e(i).on("change",a),1===e(".CRM_HRRecruitment_Form_HRVacancy").length&&(o(e('label[for="start_date"]').parents("tr")),o(e('label[for="end_date"]').parents("tr")),e('[name="entryURL"]').val().indexOf(";template=1")>-1&&e(e(".CRM_HRRecruitment_Form_HRVacancy tbody").get(0)).addClass("CRM_HRRecruitment_Form_HRVacancy_Template")),r=t,"contactForm"!==CRM.formName&&"viewSummary"!==CRM.pageName||(e(".crm-contact-job_title",".crm-summary-contactinfo-block").length&&e(".crm-contact-tabs-list #tab_summary a",r.target).text("Personal Details"),function(){if(CRM.cid&&CRM.hideGId){var t=e(".Inline_Custom_Data");t.appendTo(e("#contactinfo-block").parent("div").parent("div")),t.removeClass("crm-collapsible"),t.removeClass("collapsed"),t.addClass("crm-summary-block"),e(".Inline_Custom_Data div.collapsible-title").css({display:"none"}),e(".Inline_Custom_Data div.crm-summary-block").css({display:"block"})}e("#customFields").length<1&&(e("#Inline_Custom_Data label").each(function(){e("#nick_name").parent().after('<td id="customFields"></td>');var t=e(this).attr("for"),a=e("#"+t).detach();e("#customFields").append(e(this)),e("#customFields").append(a)}),e("#Inline_Custom_Data").remove())}(r.target),n=r.target,e("div.crm-contact-current_employer, div.crm-contact-job_title",".crm-summary-contactinfo-block").parent("div.crm-summary-row").hide(),e("form#ContactInfo input#employer_id, form#ContactInfo input#job_title",n).closest("div.crm-summary-row").hide(),e("input#employer_id, input#job_title","form#Contact").parent("td").hide(),e(".HRJobContract_Summary",n).insertBefore(e(".crm-summary-contactinfo-block")),e("div.email-signature, td#Email-Bulkmail-html","form#Contact").hide(),e("#Email-Primary","form#Contact").prev("td").prev("td").hide(),e("td#Email-Bulkmail-html, #Email-Primary","form#Contact").prev("td").hide(),e(".crm-demographics-accordion","form#Contact").insertAfter(e(".crm-contactDetails-accordion")),e("tr#Phone_Block_2","form#Contact").length<1&&e("#addPhone").click()),e("#activityCustomData").attr("colspan",3),e("#crm-activity-view-table .crm-case-activity-view-Client .label").html("Contact"),e("span.crm-frozen-field",".crm-profile-name-hrident_tab").closest("div").parent("div").hide(),e(".crm-accordion-header.crm-master-accordion-header").on("click",function(){window.setTimeout(function(){Array.prototype.forEach.call(document.querySelectorAll(".listing-box"),function(e){Ps.initialize(e)})},0)}),e("INPUT#contact_source").parent("td").children("a").click(function(){e("#crm-notification-container .crm-help .notify-content").remove(),e("#crm-notification-container .crm-help p").length&&e("#crm-notification-container .crm-help p").remove(),e("#crm-notification-container .crm-help").append("<p>Source is a useful field where data has been migrated to CiviHR from one or a number of other legacy systems. The Source field will indicate which legacy system the contact has come from.</p>")})}).ready(function(){var t,a,o,i,r,n;e.ajax("/civicrm/hrcore/usermenu?snippet=4",{dataType:"html",success:function(t){var a,o,i;a="civihr-menu",o=e(t),(i=e("<div>")).attr("id",a),i.append(e("#civicrm-menu")),i.append(o),i.insertAfter("#page")}}),t=e(".crm-link-home"),a=e(".crm-logo-sm",t).addClass("chr_logo chr_logo--default-color").removeClass("crm-logo-sm").wrap('<span class="menumain-icon">').parent(),i=a,o=e("li > a",t).first().text("Home").wrapInner('<span class="menumain-label">').prepend(i),r=o,t.off().find("#civicrm-home").before(r).remove(),e(".CRM_HRRecruitment_Form_Application").addClass("crm-form-block"),e(".CRM_HRRecruitment_Form_Application .crm-profile-name-application_profile").addClass("form-layout-compressed"),e("#root-menu-div .menu-item-arrow").each(function(t){var a=e(this);a.before('<i class="fa fa-caret-right menu-item-arrow"></i>'),a.remove()}),n="activetarget",e(".menumain").not(".crm-Self_Service_Portal").hover(function(){e(this).addClass(n)},function(){e(this).removeClass(n)})})}(CRM.$,CRM._);
!function(t){"use strict";var n=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;t.fn.attrchange=function(t){if(n){var e={subtree:!1,attributes:!0},i=new n(function(n){n.forEach(function(n){t.call(n.target,n)})});return this.each(function(){i.observe(this,e)})}}}(CRM.$);
!function(t){"use strict";var i=t("body");i.on("click",".btn-slide",function(){var a,n,e=t(this),s=e.closest(".crm-entity")[0],c=e.children("ul.panel");function o(){t(".civihr-popup").remove(),i.removeClass("civihr-popup-open")}o(),a=e.offset(),(n=c.clone(!0).appendTo(i).addClass("civihr-popup").attr("id",s.id).addClass(t(s).attr("class"))).css({left:+a.left-(n.width()-e.outerWidth()),top:+a.top+e.outerHeight()}),n.show(),n.find("a").click(function(){var i=t(this).parent().index();c.find("li:nth("+i+") a").click()}),i.addClass("civihr-popup-open"),e.data("attrchange-is-on")||(e.data("attrchange-is-on",!0),e.attrchange(function(){e.hasClass("btn-slide-active")||o()}))})}(CRM.$);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
