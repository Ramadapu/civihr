eval("/* eslint-env amd */\n\ndefine('access-rights/apis/right.api',[],function () {\n  'use strict';\n\n  rightApi.__name = 'rightApi';\n  rightApi.$inject = ['api', '$q', '$location'];\n\n  function rightApi (api, $q, $location) {\n    var entityName = 'Rights';\n    var additionalParams = {\n      'contact_id': $location.search().cid\n    };\n    return api.extend({\n      getLocations: function () {\n        return this.sendGET(entityName, 'getlocations', additionalParams, false);\n      },\n      getRegions: function () {\n        return this.sendGET(entityName, 'getregions', additionalParams, false);\n      },\n      deleteByIds: function (ids) {\n        return $q.all(ids.map(function (id) {\n          return this.sendPOST(entityName, 'delete', {\n            'contact_id': $location.search().cid,\n            'id': id\n          });\n        }.bind(this)));\n      },\n      saveRegions: function (ids) {\n        return $q.all(ids.map(function (id) {\n          return this.sendPOST(entityName, 'create', {\n            'contact_id': $location.search().cid,\n            'entity_id': id,\n            'entity_type': 'hrjc_region'\n          });\n        }.bind(this)));\n      },\n      saveLocations: function (ids) {\n        return $q.all(ids.map(function (id) {\n          return this.sendPOST(entityName, 'create', {\n            'contact_id': $location.search().cid,\n            'entity_id': id,\n            'entity_type': 'hrjc_location'\n          });\n        }.bind(this)));\n      }\n    });\n  }\n\n  return rightApi;\n});\n\n//# sourceURL=/access-rights/apis/right.api.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/modules/access-rights.apis',[\n  'common/angular',\n  'common/services/api',\n  'access-rights/apis/right.api'\n], function (angular, __, rightApi) {\n  'use strict';\n\n  return angular.module('access-rights.apis', ['common.apis'])\n    .factory(rightApi.__name, rightApi);\n});\n\n//# sourceURL=/access-rights/modules/access-rights.apis.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/modules/access-rights.config',[\n  'common/angular'\n], function (angular) {\n  'use strict';\n\n  angular.module('access-rights.config', []).config(config);\n\n  config.$inject = ['$locationProvider', '$httpProvider'];\n\n  function config ($locationProvider, $httpProvider) {\n    $locationProvider.html5Mode({\n      enabled: true,\n      requireBase: false\n    });\n\n    $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n  }\n});\n\n//# sourceURL=/access-rights/modules/access-rights.config.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/controllers/access-rights.controller',[],function () {\n  'use strict';\n\n  AccessRightsCtrl.__name = 'AccessRightsCtrl';\n  AccessRightsCtrl.$inject = ['$rootElement', '$uibModal'];\n\n  function AccessRightsCtrl ($rootElement, $modal) {\n    return {\n\n      /**\n       * Opens the permissions modal\n       */\n      openModal: function () {\n        $modal.open({\n          appendTo: $rootElement.children().eq(0),\n          controller: 'AccessRightsModalCtrl',\n          controllerAs: 'modalCtrl',\n          bindToController: true,\n          templateUrl: CRM.vars.contactAccessRights.baseURL + '/views/access-rights-modal.html'\n        });\n      }\n    };\n  }\n\n  return AccessRightsCtrl;\n});\n\n//# sourceURL=/access-rights/controllers/access-rights.controller.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/controllers/access-rights-modal.controller',[\n  'common/lodash'\n], function (_) {\n  'use strict';\n\n  AccessRightsModalCtrl.__name = 'AccessRightsModalCtrl';\n  AccessRightsModalCtrl.$inject = ['$q', '$uibModalInstance', 'Region', 'Location', 'Right'];\n\n  function AccessRightsModalCtrl ($q, $modalInstance, Region, Location, Right) {\n    var vm = this;\n\n    vm.submitting = false;\n\n    vm.availableData = {\n      regions: [],\n      locations: []\n    };\n\n    vm.selectedData = {\n      locations: [],\n      regions: []\n    };\n\n    vm.originalData = {\n      locations: [],\n      regions: []\n    };\n\n    vm.errorMsg = '';\n\n    vm.dataLoaded = false;\n\n    /**\n     * Closes the modal\n     */\n    vm.cancel = function () {\n      $modalInstance.dismiss('cancel');\n    };\n\n    /**\n     * Saves data and closes the modal\n     */\n    vm.submit = function () {\n      vm.submitting = true;\n      $q.all([persistValues('regions'), persistValues('locations')])\n        .then(function () {\n          $modalInstance.dismiss('cancel');\n        })\n        .catch(function () {\n          vm.errorMsg = 'Error while saving data';\n        })\n        .finally(function () {\n          vm.submitting = true;\n        });\n    };\n\n    /**\n     * Saves the new values, and deletes the removed ones\n     *\n     * @param  {string} type  Either \"regions\" or \"locations\"\n     * @return {Promise}      The result of all promises\n     */\n    function persistValues (type) {\n      var originalData = vm.originalData[type];\n      var selectedData = vm.selectedData[type];\n\n      var originalEntityIds = originalData.map(function (i) {\n        return i.entity_id;\n      });\n      var newEntityIds = _.difference(selectedData, originalEntityIds);\n      var removedRightIds = _.difference(originalEntityIds, selectedData)\n        .map(function (entityId) {\n          return _.find(originalData, function (i) {\n            return i.entity_id === entityId;\n          }).id;\n        });\n\n      var promises = [];\n\n      if (newEntityIds.length > 0) {\n        promises.push(Right['save' + _.capitalize(type)](newEntityIds));\n      }\n      if (removedRightIds.length > 0) {\n        promises.push(Right.deleteByIds(removedRightIds));\n      }\n\n      return $q.all(promises);\n    }\n\n    /**\n     * Loads the API data\n     */\n    function init () {\n      $q.all([\n        Region.getAll(),\n        Location.getAll()\n      ])\n        .then(function (values) {\n          return {\n            regions: values[0],\n            locations: values[1]\n          };\n        })\n        .then(function (values) {\n          return $q.all(_.map(values, function (value, key) {\n            vm.availableData[key] = value;\n            return Right['get' + _.capitalize(key)]();\n          }));\n        })\n        .then(function (values) {\n          return {\n            regions: values[0],\n            locations: values[1]\n          };\n        })\n        .then(function (values) {\n          Object.keys(values).forEach(function (key) {\n            vm.originalData[key] = values[key].values;\n            vm.selectedData[key] = values[key].values.map(function (entity) {\n              return entity.entity_id;\n            });\n          });\n        })\n        .then(function () {\n          vm.dataLoaded = true;\n        });\n    }\n    init();\n  }\n\n  return AccessRightsModalCtrl;\n});\n\n//# sourceURL=/access-rights/controllers/access-rights-modal.controller.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/modules/access-rights.controllers',[\n  'common/angular',\n  'access-rights/controllers/access-rights.controller',\n  'access-rights/controllers/access-rights-modal.controller'\n], function (angular, AccessRightsCtrl, AccessRightsModalCtrl) {\n  'use strict';\n\n  return angular.module('access-rights.controllers', [])\n    .controller(AccessRightsCtrl.__name, AccessRightsCtrl)\n    .controller(AccessRightsModalCtrl.__name, AccessRightsModalCtrl);\n});\n\n//# sourceURL=/access-rights/modules/access-rights.controllers.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/modules/access-rights.core',[\n  'common/angular',\n  'common/ui-select',\n  'common/angularBootstrap',\n  'common/modules/xeditable-civi',\n  'common/directives/loading'\n], function (angular) {\n  'use strict';\n\n  angular.module('access-rights.core', [\n    'ngAnimate',\n    'ui.bootstrap',\n    'ui.select',\n    'xeditable-civi',\n    'common.directives'\n  ]);\n});\n\n//# sourceURL=/access-rights/modules/access-rights.core.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/models/location.model',[\n  'common/services/api/option-group'\n], function () {\n  'use strict';\n\n  Location.__name = 'Location';\n  Location.$inject = ['Model', 'api.optionGroup'];\n\n  function Location (Model, OptionGroup) {\n    return Model.extend({\n      getAll: function () {\n        return OptionGroup.valuesOf('hrjc_location');\n      }\n    });\n  }\n\n  return Location;\n});\n\n//# sourceURL=/access-rights/models/location.model.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/models/region.model',[\n  'common/services/api/option-group'\n], function () {\n  'use strict';\n\n  Region.__name = 'Region';\n  Region.$inject = ['Model', 'api.optionGroup'];\n\n  function Region (Model, OptionGroup) {\n    return Model.extend({\n      getAll: function () {\n        return OptionGroup.valuesOf('hrjc_region');\n      }\n    });\n  }\n\n  return Region;\n});\n\n//# sourceURL=/access-rights/models/region.model.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/models/right.model',[],function () {\n  'use strict';\n\n  Right.__name = 'Right';\n  Right.$inject = ['Model', 'rightApi'];\n\n  function Right (Model, api) {\n    return Model.extend({\n      getLocations: api.getLocations.bind(api),\n      getRegions: api.getRegions.bind(api),\n      deleteByIds: api.deleteByIds.bind(api),\n      saveRegions: api.saveRegions.bind(api),\n      saveLocations: api.saveLocations.bind(api)\n    });\n  }\n\n  return Right;\n});\n\n//# sourceURL=/access-rights/models/right.model.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/modules/access-rights.models',[\n  'common/angular',\n  'access-rights/models/location.model',\n  'access-rights/models/region.model',\n  'access-rights/models/right.model',\n  'common/models/model',\n  'access-rights/modules/access-rights.apis'\n], function (angular, Location, Region, Right) {\n  'use strict';\n\n  return angular.module('access-rights.models', [\n    'common.models',\n    'access-rights.apis'\n  ])\n  .factory(Location.__name, Location)\n  .factory(Region.__name, Region)\n  .factory(Right.__name, Right);\n});\n\n//# sourceURL=/access-rights/modules/access-rights.models.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/modules/access-rights.run',[\n  'common/angular'\n], function (angular) {\n  'use strict';\n\n  angular.module('access-rights.run', []).run(run);\n\n  run.$inject = ['$log', 'editableOptions', 'editableThemes'];\n\n  function run ($log, editableOptions, editableThemes) {\n    $log.debug('app.run');\n    editableOptions.theme = 'bs3';\n  }\n});\n\n//# sourceURL=/access-rights/modules/access-rights.run.js"),eval("/* eslint-env amd */\n\ndefine('access-rights/modules/access-rights.module',[\n  'common/angular',\n  'access-rights/modules/access-rights.apis',\n  'access-rights/modules/access-rights.config',\n  'access-rights/modules/access-rights.controllers',\n  'access-rights/modules/access-rights.core',\n  'access-rights/modules/access-rights.models',\n  'access-rights/modules/access-rights.run'\n], function (angular) {\n  'use strict';\n\n  angular.module('access-rights', [\n    'access-rights.core',\n    'access-rights.config',\n    'access-rights.run',\n    'access-rights.apis',\n    'access-rights.controllers',\n    'access-rights.models'\n  ]);\n\n  return angular;\n});\n\n//# sourceURL=/access-rights/modules/access-rights.module.js"),eval("/* eslint-env amd */\n\ndefine('dom-initialization',[\n  'common/angular'\n], function (angular) {\n  'use strict';\n\n  return {\n    /**\n     * Adds the necessary elements to the DOM so the app can be initialized.\n     * This approach was used to make the extension self contained, avoiding the\n     * overriding of the \".tpl\" file for the page and possibly generating\n     * conflicts with other extensions.\n     *\n     * @return {angular element} The angular element for the app\n     */\n    addAppToDOM: function () {\n      var actionsElement = angular.element('.crm-actions-ribbon ul#actions');\n      var appElement = angular.element('<li id=\"access-rights\"> ' +\n          '<div ng-controller=\"AccessRightsCtrl as $ctrl\" id=\"bootstrap-theme\"> ' +\n            '<a href class=\"edit button pull-right\" ng-click=\"$ctrl.openModal()\" id=\"manage-roles-and-teams\"> ' +\n              '<div class=\"crm-i fa-edit\"></div> Manage roles and teams ' +\n            '</a> ' +\n          '</div> ' +\n        '</li>');\n      actionsElement.append(appElement);\n      return appElement;\n    }\n  };\n});\n\n//# sourceURL=/dom-initialization.js"),eval("/* eslint-env amd */\n\n(function () {\n  'use strict';\n\n  var extPath = CRM.vars.contactAccessRights.baseURL + '/js/src/access-rights';\n  require.config({\n    urlArgs: 'bust=' + (new Date()).getTime(),\n    paths: {\n      'access-rights': extPath\n    }\n  });\n\n  require([\n    'access-rights/modules/access-rights.module',\n    'dom-initialization'\n  ], function (angular, domInitialization) {\n    angular.bootstrap(domInitialization.addAppToDOM(), ['access-rights']);\n  });\n})(require);\n\n//# sourceURL=/access-rights.js");
//# sourceMappingURL=access-rights.min.js.map