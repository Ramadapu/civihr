<?php
/*
+--------------------------------------------------------------------+
| CiviCRM version 4.7                                                |
+--------------------------------------------------------------------+
| Copyright CiviCRM LLC (c) 2004-2017                                |
+--------------------------------------------------------------------+
| This file is a part of CiviCRM.                                    |
|                                                                    |
| CiviCRM is free software; you can copy, modify, and distribute it  |
| under the terms of the GNU Affero General Public License           |
| Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
|                                                                    |
| CiviCRM is distributed in the hope that it will be useful, but     |
| WITHOUT ANY WARRANTY; without even the implied warranty of         |
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
| See the GNU Affero General Public License for more details.        |
|                                                                    |
| You should have received a copy of the GNU Affero General Public   |
| License and the CiviCRM Licensing Exception along                  |
| with this program; if not, contact CiviCRM LLC                     |
| at info[AT]civicrm[DOT]org. If you have questions about the        |
| GNU Affero General Public License or the licensing of CiviCRM,     |
| see the CiviCRM license FAQ at http://civicrm.org/licensing        |
+--------------------------------------------------------------------+
*/
/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2017
 *
 * Generated from xml/schema/CRM/HRLeaveAndAbsences/LeaveBalanceChange.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:5ac8bcc2933586b727edba3e124787e7)
 */
require_once 'CRM/Core/DAO.php';
require_once 'CRM/Utils/Type.php';
/**
 * CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange constructor.
 */
class CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange extends CRM_Core_DAO {
  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  static $_tableName = 'civicrm_hrleaveandabsences_leave_balance_change';
  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var boolean
   */
  static $_log = true;
  /**
   * Unique LeaveBalanceChange ID
   *
   * @var int unsigned
   */
  public $id;
  /**
   * One of the values of the Leave Balance Type option group
   *
   * @var int unsigned
   */
  public $type_id;
  /**
   * The amount of days this change in balance represents to the entitlement
   *
   * @var float
   */
  public $amount;
  /**
   * Some balance changes can expire. This is the date it will expire.
   *
   * @var date
   */
  public $expiry_date;
  /**
   * FK to LeaveBalanceChange. This is only used for a balance change that represents expired days, and it will be related to the balance change that has expired.
   *
   * @var int unsigned
   */
  public $expired_balance_change_id;
  /**
   * Some balance changes are originated from an specific source (a leave request date, for example) and this field will have the ID of this source.
   *
   * @var int unsigned
   */
  public $source_id;
  /**
   * Some balance changes are originated from an specific source (a leave request date, for example) and this field will have text string to indicate what is the source.
   *
   * @var string
   */
  public $source_type;
  /**
   * Class constructor.
   */
  function __construct() {
    $this->__table = 'civicrm_hrleaveandabsences_leave_balance_change';
    parent::__construct();
  }
  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static ::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'expired_balance_change_id', 'civicrm_hrleaveandabsences_leave_balance_change', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }
  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = array(
        'id' => array(
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'Unique LeaveBalanceChange ID',
          'required' => true,
          'table_name' => 'civicrm_hrleaveandabsences_leave_balance_change',
          'entity' => 'LeaveBalanceChange',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
        ) ,
        'type_id' => array(
          'name' => 'type_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'One of the values of the Leave Balance Type option group',
          'required' => true,
          'table_name' => 'civicrm_hrleaveandabsences_leave_balance_change',
          'entity' => 'LeaveBalanceChange',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
          'pseudoconstant' => array(
            'optionGroupName' => 'hrleaveandabsences_leave_balance_change_type',
            'optionEditPath' => 'civicrm/admin/options/hrleaveandabsences_leave_balance_change_type',
          )
        ) ,
        'amount' => array(
          'name' => 'amount',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => ts('Amount') ,
          'description' => 'The amount of days this change in balance represents to the entitlement',
          'required' => true,
          'precision' => array(
            20,
            2
          ) ,
          'table_name' => 'civicrm_hrleaveandabsences_leave_balance_change',
          'entity' => 'LeaveBalanceChange',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
        ) ,
        'expiry_date' => array(
          'name' => 'expiry_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => ts('Expiry Date') ,
          'description' => 'Some balance changes can expire. This is the date it will expire.',
          'table_name' => 'civicrm_hrleaveandabsences_leave_balance_change',
          'entity' => 'LeaveBalanceChange',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
        ) ,
        'expired_balance_change_id' => array(
          'name' => 'expired_balance_change_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'FK to LeaveBalanceChange. This is only used for a balance change that represents expired days, and it will be related to the balance change that has expired.',
          'table_name' => 'civicrm_hrleaveandabsences_leave_balance_change',
          'entity' => 'LeaveBalanceChange',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
          'FKClassName' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
        ) ,
        'source_id' => array(
          'name' => 'source_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'Some balance changes are originated from an specific source (a leave request date, for example) and this field will have the ID of this source.',
          'table_name' => 'civicrm_hrleaveandabsences_leave_balance_change',
          'entity' => 'LeaveBalanceChange',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
        ) ,
        'source_type' => array(
          'name' => 'source_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Source Type') ,
          'description' => 'Some balance changes are originated from an specific source (a leave request date, for example) and this field will have text string to indicate what is the source.',
          'maxlength' => 20,
          'size' => CRM_Utils_Type::MEDIUM,
          'table_name' => 'civicrm_hrleaveandabsences_leave_balance_change',
          'entity' => 'LeaveBalanceChange',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_LeaveBalanceChange',
        ) ,
      );
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }
  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }
  /**
   * Returns the names of this table
   *
   * @return string
   */
  static function getTableName() {
    return self::$_tableName;
  }
  /**
   * Returns if this table needs to be logged
   *
   * @return boolean
   */
  function getLog() {
    return self::$_log;
  }
  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  static function &import($prefix = false) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'hrleaveandabsences_leave_balance_change', $prefix, array());
    return $r;
  }
  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  static function &export($prefix = false) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'hrleaveandabsences_leave_balance_change', $prefix, array());
    return $r;
  }
}
