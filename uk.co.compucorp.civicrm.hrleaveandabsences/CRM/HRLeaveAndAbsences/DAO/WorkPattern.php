<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2018
 *
 * Generated from /vagrant/hr-bugs-4002/sites/all/modules/civicrm/tools/extensions/civihr/uk.co.compucorp.civicrm.hrleaveandabsences/xml/schema/CRM/HRLeaveAndAbsences/WorkPattern.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:7eb53227b49e403a24e43fe545635dac)
 */

/**
 * Database access object for the WorkPattern entity.
 */
class CRM_HRLeaveAndAbsences_DAO_WorkPattern extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  static $_tableName = 'civicrm_hrleaveandabsences_work_pattern';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  static $_log = TRUE;

  /**
   * Unique WorkPattern ID
   *
   * @var int unsigned
   */
  public $id;

  /**
   * The Work Pattern label's (name)
   *
   * @var string
   */
  public $label;

  /**
   * A small description of the Work Pattern
   *
   * @var string
   */
  public $description;

  /**
   * There can only be one default entity at any given time
   *
   * @var boolean
   */
  public $is_default;

  /**
   * Only enabled Work Patterns can be used. The is_active name is used to follow Civi's conventions.
   *
   * @var boolean
   */
  public $is_active;

  /**
   * The weight value is used to order the Work Patterns on a list
   *
   * @var int unsigned
   */
  public $weight;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_hrleaveandabsences_work_pattern';
    parent::__construct();
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'Unique WorkPattern ID',
          'required' => TRUE,
          'table_name' => 'civicrm_hrleaveandabsences_work_pattern',
          'entity' => 'WorkPattern',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_WorkPattern',
          'localizable' => 0,
        ],
        'label' => [
          'name' => 'label',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Label'),
          'description' => 'The Work Pattern label\'s (name)',
          'required' => TRUE,
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'table_name' => 'civicrm_hrleaveandabsences_work_pattern',
          'entity' => 'WorkPattern',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_WorkPattern',
          'localizable' => 0,
        ],
        'description' => [
          'name' => 'description',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Description'),
          'description' => 'A small description of the Work Pattern',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'table_name' => 'civicrm_hrleaveandabsences_work_pattern',
          'entity' => 'WorkPattern',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_WorkPattern',
          'localizable' => 0,
        ],
        'is_default' => [
          'name' => 'is_default',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => ts('Is default?'),
          'description' => 'There can only be one default entity at any given time',
          'table_name' => 'civicrm_hrleaveandabsences_work_pattern',
          'entity' => 'WorkPattern',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_WorkPattern',
          'localizable' => 0,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => ts('Is enabled?'),
          'description' => 'Only enabled Work Patterns can be used. The is_active name is used to follow Civi\'s conventions.',
          'default' => '1',
          'table_name' => 'civicrm_hrleaveandabsences_work_pattern',
          'entity' => 'WorkPattern',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_WorkPattern',
          'localizable' => 0,
        ],
        'weight' => [
          'name' => 'weight',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Weight'),
          'description' => 'The weight value is used to order the Work Patterns on a list',
          'required' => TRUE,
          'table_name' => 'civicrm_hrleaveandabsences_work_pattern',
          'entity' => 'WorkPattern',
          'bao' => 'CRM_HRLeaveAndAbsences_DAO_WorkPattern',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'hrleaveandabsences_work_pattern', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'hrleaveandabsences_work_pattern', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'work_pattern_unique_label' => [
        'name' => 'work_pattern_unique_label',
        'field' => [
          0 => 'label',
        ],
        'localizable' => FALSE,
        'unique' => TRUE,
        'sig' => 'civicrm_hrleaveandabsences_work_pattern::1::label',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
