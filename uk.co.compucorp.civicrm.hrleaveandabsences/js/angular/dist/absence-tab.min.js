!function(e){define("leave-absences/shared/config",[],function(){var t=CRM.vars.leaveAndAbsences.baseURL+"/js/angular/src/leave-absences/shared";e.config({paths:{"leave-absences/shared/ui-router":"leave-absences/shared/vendor/angular-ui-router.min",mocks:"../test/mocks"},shim:{"leave-absences/shared/ui-router":{}}}),e.config({paths:{"leave-absences/shared/ui-router":t+"/vendor/angular-ui-router.min",mocks:CRM.vars.leaveAndAbsences.baseURL+"/js/angular/test/mocks"}})})}(require),function(e){define("leave-absences/shared/modules/shared-settings",["common/angular"],function(t){return t.module("leave-absences.settings",[]).constant("shared-settings",{attachmentToken:e.vars.leaveAndAbsences.attachmentToken,debug:e.debug,managerPathTpl:e.vars.leaveAndAbsences.baseURL+"/views/manager-leave/",sharedPathTpl:e.vars.leaveAndAbsences.baseURL+"/views/shared/",serverDateFormat:"YYYY-MM-DD",serverDateTimeFormat:"YYYY-MM-DD HH:mm:ss",permissions:{admin:{access:"access leave and absences",administer:"administer leave and absences"},ssp:{access:"access leave and absences in ssp",manage:"manage leave and absences in ssp"}},fileUploader:{queueLimit:10},statusNames:{approved:"approved",adminApproved:"admin_approved",awaitingApproval:"awaiting_approval",moreInformationRequired:"more_information_required",rejected:"rejected",cancelled:"cancelled"}})})}(CRM),define("leave-absences/shared/modules/apis",["common/angular","common/modules/apis","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.apis",["common.apis","leave-absences.settings"])}),define("leave-absences/shared/modules/models-instances",["common/angular","common/models/instances/instance","common/modules/services","common/modules/models","common/services/check-permissions","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.models.instances",["common.models","common.models.instances","common.services","leave-absences.settings"])}),define("leave-absences/shared/modules/models",["common/angular","common/modules/models","common/modules/services","leave-absences/shared/modules/apis","leave-absences/shared/modules/models-instances","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.models",["common.models","common.services","leave-absences.apis","leave-absences.models.instances","leave-absences.settings"])}),define("leave-absences/shared/apis/absence-type.api",["common/lodash","common/moment","leave-absences/shared/modules/apis","common/services/api"],function(e,t,n){"use strict";n.factory("AbsenceTypeAPI",["$log","api","shared-settings",function(n,a,o){return n.debug("AbsenceTypeAPI"),a.extend({all:function(t){return n.debug("AbsenceTypeAPI.all"),this.sendGET("AbsenceType","get",e.defaults(t||{},{is_active:!0})).then(function(e){return e.values})},calculateToilExpiryDate:function(a,s,r){return n.debug("AbsenceTypeAPI.calculateToilExpiryDate"),r=e.assign({},r,{absence_type_id:a,date:t(s).format(o.serverDateFormat)}),this.sendPOST("AbsenceType","calculateToilExpiryDate",r).then(function(e){return e.values.expiry_date})}})}])}),define("leave-absences/shared/instances/absence-type.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("AbsenceTypeInstance",["$log","ModelInstance",function(e,t){return e.debug("AbsenceTypeInstance"),t.extend({})}])}),define("leave-absences/shared/models/absence-type.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","common/models/option-group","leave-absences/shared/apis/absence-type.api","leave-absences/shared/instances/absence-type.instance"],function(e,t){"use strict";t.factory("AbsenceType",["$log","$q","Model","OptionGroup","AbsenceTypeAPI","AbsenceTypeInstance",function(t,n,a,o,s,r){return t.debug("AbsenceType"),a.extend({all:function(e){return s.all(e).then(function(e){return e.map(function(e){return r.init(e,!0)})})},calculateToilExpiryDate:function(e,t,n){return s.calculateToilExpiryDate(e,t,n)},canExpire:function(e){return s.all({accrual_expiration_unit:{"IS NOT NULL":1},accrual_expiration_duration:{"IS NOT NULL":1},allow_accruals_request:1,id:e,options:{limit:1},return:["id"]}).then(function(e){return e.length>0})},loadCalculationUnits:function(t){return o.valuesOf("hrleaveandabsences_absence_type_calculation_unit").then(function(n){return n=e.indexBy(n,"value"),e.map(t,function(t){return e.assign(t,{calculation_unit_label:n[t.calculation_unit].label,calculation_unit_name:n[t.calculation_unit].name})})})}})}])}),define("leave-absences/shared/apis/work-pattern.api",["common/lodash","leave-absences/shared/modules/apis","common/services/api"],function(e,t){"use strict";t.factory("WorkPatternAPI",["$log","api",function(t,n){function a(t){var n=e.clone(t);return n.workPattern=n["api.WorkPattern.get"].values[0],delete n["api.WorkPattern.get"],n}return t.debug("WorkPatternAPI"),n.extend({assignWorkPattern:function(t,n,a,o,s,r){return this.sendPOST("ContactWorkPattern","create",e.assign({},r,{contact_id:t,pattern_id:n,effective_date:a,effective_end_date:o,change_reason:s})).then(function(e){return e.values})},get:function(e){return this.sendGET("WorkPattern","get",e||{}).then(function(e){return e.values})},getCalendar:function(n,a,o,s){return t.debug("WorkPatternAPI.getCalendar",n,a,o,s),this.sendGET("WorkPattern","getcalendar",e.assign({},s,{contact_id:e.isArray(n)?{IN:n}:n,start_date:a,end_date:o}))},unassignWorkPattern:function(e){return this.sendPOST("ContactWorkPattern","delete",{id:e})},workPatternsOf:function(t,n,o){return this.sendGET("ContactWorkPattern","get",e.assign({},n,{contact_id:t,"api.WorkPattern.get":{id:"$value.pattern_id"}}),o).then(function(e){return e=e.values,e.map(a)})}})}])}),define("leave-absences/shared/instances/calendar.instance",["common/lodash","common/moment","leave-absences/shared/modules/models-instances","common/models/option-group","common/models/instances/instance"],function(e,t,n){"use strict";n.factory("CalendarInstance",["$log","$q","ModelInstance","shared-settings","OptionGroup",function(n,a,o,s,r){function i(t,n){return l().then(function(a){var o=this.days[c(t).valueOf()];return!!o&&e.find(a,function(e){return e.name===n}).value===o.type}.bind(this))}function c(e){return t(e,s.serverDateFormat).clone()}function l(){return u=u||r.valuesOf("hrleaveandabsences_work_day_type")}var u;return o.extend({defaultCustomData:function(){return{days:[]}},isNonWorkingDay:function(e){return i.call(this,e,"non_working_day")},isWeekend:function(e){return i.call(this,e,"weekend")},isWorkingDay:function(e){return i.call(this,e,"working_day")},transformAttributes:function(t){var n={};return t.calendar.forEach(function(e){n[c(e.date).valueOf()]=e}),e(t).omit("calendar").assign({days:n}).value()}})}])}),define("leave-absences/shared/models/calendar.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/work-pattern.api","leave-absences/shared/instances/calendar.instance"],function(e,t){"use strict";t.factory("Calendar",["$log","Model","WorkPatternAPI","CalendarInstance",function(t,n,a,o){return t.debug("Calendar"),n.extend({get:function(n,s,r,i){return t.debug("Calendar.get"),a.getCalendar(n,s,r,i).then(function(t){var a=t.values.map(function(e){return o.init(e)});return e.isArray(n)?a:a[0]})}})}])}),define("leave-absences/shared/apis/entitlement.api",["leave-absences/shared/modules/apis","common/lodash","common/services/api"],function(e,t){"use strict";e.factory("EntitlementAPI",["$log","api",function(e,n){function a(e){var n=t.clone(e),a=n["api.LeavePeriodEntitlement.getremainder"].values;return a.length&&(n.remainder=a[0].remainder),delete n["api.LeavePeriodEntitlement.getremainder"],n}function o(e){var n=t.clone(e),a=n["api.LeavePeriodEntitlement.getentitlement"].values[0].entitlement;return n.value=a,delete n["api.LeavePeriodEntitlement.getentitlement"],n}return e.debug("EntitlementAPI"),n.extend({all:function(t,n){return e.debug("EntitlementAPI.all"),t["api.LeavePeriodEntitlement.getentitlement"]={entitlement_id:"$value.id"},n&&(t["api.LeavePeriodEntitlement.getremainder"]={entitlement_id:"$value.id",include_future:!0}),this.sendGET("LeavePeriodEntitlement","get",t,!1).then(function(e){return e.values}).then(function(e){return e=e.map(o),n&&(e=e.map(a)),e})},breakdown:function(t){return e.debug("EntitlementAPI.breakdown"),this.sendGET("LeavePeriodEntitlement","getbreakdown",t).then(function(e){return e.values})},getLeaveBalances:function(t,n,a,o,s){return e.debug("EntitlementAPI.getLeaveBalances"),this.getAll("LeavePeriodEntitlement",t,n,a,o,"getLeaveBalances",s)}})}])}),define("leave-absences/shared/apis/entitlement-log.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("EntitlementLogAPI",["$log","api",function(e,t){return e.debug("EntitlementLogAPI"),t.extend({all:function(t){return e.debug("EntitlementLogAPI.all"),this.sendGET("LeavePeriodEntitlementLog","get",t,!1).then(function(e){return e.values})}})}])}),define("leave-absences/shared/instances/entitlement.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("EntitlementInstance",["$log","ModelInstance","EntitlementAPI",function(e,t,n){return e.debug("EntitlementInstance"),t.extend({defaultCustomData:function(){return{remainder:{current:0,future:0},breakdown:[]}},getBreakdown:function(){return n.breakdown({entitlement_id:this.id}).then(function(e){this.breakdown=e}.bind(this))}})}])}),define("leave-absences/shared/models/entitlement.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/entitlement.api","leave-absences/shared/apis/entitlement-log.api","leave-absences/shared/instances/entitlement.instance"],function(e,t){"use strict";t.factory("Entitlement",["$log","Model","EntitlementAPI","EntitlementInstance","EntitlementLogAPI",function(t,n,a,o,s){return t.debug("Entitlement"),n.extend({all:function(e,t){return a.all(this.processFilters(e),t).then(function(e){return e.map(function(e){return o.init(e,!0)})})},breakdown:function(t,n){return a.breakdown(t).then(function(t){return n?(n.map(function(n){var a=e.find(t,function(e){return e.id===n.id});return a&&(n.breakdown=a.breakdown),n}),n):t.map(function(e){return o.init(e,!0)})})},logs:function(t){return t=e.cloneDeep(t||{}),t.contact_id&&(t["entitlement_id.contact_id"]=t.contact_id,delete t.contact_id),t.period_id&&(t["entitlement_id.period_id"]=t.period_id,delete t.period_id),t.return=t.return||[],t.return.push("entitlement_id","entitlement_id.type_id","editor_id","entitlement_amount","comment","created_date"),s.all(t)}})}])}),define("leave-absences/shared/apis/leave-request.api",["leave-absences/shared/modules/apis","common/lodash","common/services/api"],function(e,t){"use strict";e.factory("LeaveRequestAPI",["$log","api","$q","shared-settings",function(e,n,a){return e.debug("LeaveRequestAPI"),n.extend({all:function(t,n,o,s,r){e.debug("LeaveRequestAPI.all");var i=a.defer();return t&&t.contact_id&&t.contact_id.IN&&0===t.contact_id.IN.length?i.resolve({list:[],total:0,allIds:[]}):i.resolve(this.getAll("LeaveRequest",t,n,o,s,"getFull",r)),i.promise},balanceChangeByAbsenceType:function(t,n,o,s){e.debug("LeaveRequestAPI.balanceChangeByAbsenceType");var r=a.defer();t&&n||r.reject("contact_id and period_id are mandatory");var i={contact_id:t,period_id:n,statuses:o?{IN:o}:null,public_holiday:s||!1};return this.sendGET("LeaveRequest","getbalancechangebyabsencetype",i,!1).then(function(e){r.resolve(e.values)}),r.promise},calculateBalanceChange:function(n){return e.debug("LeaveRequestAPI.calculateBalanceChange",n),this.sendPOST("LeaveRequest","calculatebalancechange",n).then(function(e){return e.values.breakdown=t.values(e.values.breakdown),e.values})},getBalanceChangeBreakdown:function(e){return this.sendGET("LeaveRequest","getBreakdown",{leave_request_id:e},!1)},getWorkDayForDate:function(e,t){return this.sendGET("LeaveRequest","getWorkDayForDate",{leave_date:e,contact_id:t.toString()},!1)},create:function(t){return e.debug("LeaveRequestAPI.create",t),this.sendPOST("LeaveRequest","create",t).then(function(e){return e.values[0]})},delete:function(e){return this.sendPOST("LeaveRequest","delete",{id:e})},deleteAttachment:function(e,n,a){return a=t.assign({},a,{leave_request_id:e,attachment_id:n}),this.sendPOST("LeaveRequest","deleteattachment",a).then(function(e){return e.values})},deleteComment:function(e,n){return n=t.assign({},n,{comment_id:e}),this.sendPOST("LeaveRequest","deletecomment",n).then(function(e){return e.values})},find:function(t){return e.debug("LeaveRequestAPI.find"),this.sendGET("LeaveRequest","getFull",{id:t}).then(function(e){return 0===e.values.length?a.reject("LeaveRequest not found with this ID"):e.values[0]})},getAttachments:function(e,n){return n=t.assign({},n,{leave_request_id:e}),this.sendGET("LeaveRequest","getattachments",n,!1).then(function(e){return e.values})},getComments:function(e,n){return n=t.assign({},n,{leave_request_id:e}),this.sendGET("LeaveRequest","getcomment",n,!1).then(function(e){return e.values})},isManagedBy:function(t,n){return e.debug("LeaveRequestAPI.isManagedBy"),this.sendPOST("LeaveRequest","isManagedBy",{leave_request_id:t,contact_id:n}).then(function(e){return e.values})},isValid:function(n){e.debug("LeaveRequestAPI.isValid",n);var o=a.defer();return this.sendPOST("LeaveRequest","isValid",n).then(function(e){e.count>0?o.reject(t(e.values).map().flatten().value()):o.resolve(e.values)}),o.promise},saveComment:function(e,n,a){return a=t.assign({},a,{leave_request_id:e,text:n.text,contact_id:n.contact_id}),this.sendPOST("LeaveRequest","addcomment",a).then(function(e){return e.values})},update:function(t){e.debug("LeaveRequestAPI.update",t);var n=a.defer();return t.id||n.reject("id is mandatory field"),this.sendPOST("LeaveRequest","create",t).then(function(e){return e.values[0]})}})}])}),define("leave-absences/shared/instances/leave-request.instance",["common/lodash","leave-absences/shared/modules/models-instances","common/models/option-group","common/models/instances/instance"],function(e,t){"use strict";t.factory("LeaveRequestInstance",["$q","checkPermissions","OptionGroup","shared-settings","ModelInstance","LeaveRequestAPI",function(t,n,a,o,s,r){function i(t){e.first(e.values(t.breakdown)).amount=this.from_date_amount,t.breakdown.length>1&&(e.last(e.values(t.breakdown)).amount=this.to_date_amount),t.amount=e.reduce(t.breakdown,function(e,t){return e-t.amount},0)}function c(e){return d(e).then(function(e){var n=this.status_id;return this.status_id=e.value,this.update().catch(function(e){return this.status_id=n,t.reject(e)}.bind(this))}.bind(this))}function l(e){return d(e).then(function(e){return this.status_id===e.value}.bind(this))}function u(){var n=[];return e.forEach(this.files,function(e){e.toBeDeleted&&n.push(r.deleteAttachment(this.id,e.attachment_id))}.bind(this)),t.all(n)}function d(e){return a.valuesOf("hrleaveandabsences_leave_request_status").then(function(t){return t.find(function(t){return t.name===e})})}function m(){var e=this.id,n=[];return n.push(t.sequence(this.comments.filter(function(e){return!e.comment_id}).map(function(t){return function(){return r.saveComment(e,t)}}))),n=n.concat(this.comments.filter(function(e){return e.comment_id&&e.toBeDeleted}).map(function(e){return r.deleteComment(e.comment_id)})),t.all(n)}return s.extend({defaultCustomData:function(){return{comments:[],files:[],request_type:"leave"}},calculateBalanceChange:function(t){var n=["contact_id","from_date","to_date","type_id","from_date_type","to_date_type"];return"hours"===t&&e.pull(n,"from_date_type","to_date_type"),r.calculateBalanceChange(e.pick(this,n)).then(function(e){return"hours"===t&&i.call(this,e),e}.bind(this))},cancel:function(){return c.call(this,o.statusNames.cancelled)},approve:function(){return c.call(this,o.statusNames.approved)},reject:function(){return c.call(this,o.statusNames.rejected)},sendBack:function(){return c.call(this,o.statusNames.moreInformationRequired)},update:function(){return r.update(this.toAPI()).then(function(){return t.all([m.call(this),u.call(this)])}.bind(this))},create:function(){return r.create(this.toAPI()).then(function(e){return this.id=e.id,t.all([m.call(this)])}.bind(this))},deleteAttachment:function(e){e.toBeDeleted||(e.toBeDeleted=!0)},deleteComment:function(t){if(t.comment_id)return void(t.toBeDeleted=!0);this.comments=e.reject(this.comments,function(e){return t.created_at===e.created_at&&t.text===e.text})},delete:function(){return r.delete(this.id)},getBalanceChangeBreakdown:function(){return r.getBalanceChangeBreakdown(this.id).then(function(t){return{amount:e.reduce(t.values,function(e,t){return e+parseFloat(t.amount)},0),breakdown:t.values.map(function(e){return{amount:parseFloat(e.amount),date:e.date,type:{id:e.id,value:e.type,label:e.label}}})}})},getWorkDayForDate:function(e){return r.getWorkDayForDate(e,this.contact_id).then(function(e){return e.values}).catch(function(e){return t.reject(e)})},isValid:function(){return r.isValid(this.toAPI())},isApproved:function(){return l.call(this,o.statusNames.approved)},isAwaitingApproval:function(){return l.call(this,o.statusNames.awaitingApproval)},isCancelled:function(){return l.call(this,o.statusNames.cancelled)},isRejected:function(){return l.call(this,o.statusNames.rejected)},isSentBack:function(){return l.call(this,o.statusNames.moreInformationRequired)},loadComments:function(){return this.id?r.getComments(this.id).then(function(e){this.comments=e}.bind(this)):t.resolve()},roleOf:function(e){return this.contact_id===e?t.resolve("owner"):n(o.permissions.admin.administer).then(function(t){return t?"admin":r.isManagedBy(this.id,e).then(function(e){return e?"manager":"none"})}.bind(this))},toAPIFilter:function(t,n,a){e.includes(["balance_change","dates","comments","files"],a)||(t[a]=this[a])},loadAttachments:function(){return this.id?r.getAttachments(this.id).then(function(e){this.files=e}.bind(this)):t.resolve()}})}])}),define("leave-absences/shared/models/leave-request.model",["leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/leave-request.api","leave-absences/shared/instances/leave-request.instance"],function(e){"use strict";e.factory("LeaveRequest",["$log","Model","LeaveRequestAPI","LeaveRequestInstance",function(e,t,n,a){return e.debug("LeaveRequest"),t.extend({all:function(e,t,o,s,r){return n.all(this.processFilters(e),t,o,s,r).then(function(e){return e.list=e.list.map(function(e){return a.init(e,!0)}),e})},balanceChangeByAbsenceType:function(e,t,a,o){return n.balanceChangeByAbsenceType(e,t,a,o)},find:function(e){return n.find(e).then(function(e){return a.init(e,!0)})}})}])}),define("leave-absences/shared/instances/work-pattern.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("WorkPatternInstance",["$log","ModelInstance",function(e,t){return e.debug("WorkPatternInstance"),t.extend({})}])}),define("leave-absences/shared/models/work-pattern.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/work-pattern.api","leave-absences/shared/instances/work-pattern.instance"],function(e,t){"use strict";t.factory("WorkPattern",["$log","Model","WorkPatternAPI","WorkPatternInstance",function(e,t,n,a){return e.debug("WorkPattern"),t.extend({assignWorkPattern:function(e,t,a,o,s,r){return n.assignWorkPattern(e,t,a,o,s,r)},default:function(){return n.get({default:!0}).then(function(e){return a.init(e[0],!0)})},unassignWorkPattern:function(e){return n.unassignWorkPattern(e)},workPatternsOf:function(e,t,o){return n.workPatternsOf(e,t,o).then(function(e){return e.map(function(e){return a.init(e,!0)})})}})}])}),define("leave-absences/shared/modules/components",["common/angular","common/modules/directives","common/modules/models","./shared-settings","./models"],function(e){return e.module("leave-absences.components",["common.directives","common.models","leave-absences.settings","leave-absences.models"])}),define("leave-absences/shared/modules/controllers",["common/angular","common/angularBootstrap","leave-absences/shared/modules/models","leave-absences/shared/modules/models-instances","leave-absences/shared/modules/shared-settings"],function(e){return e.module("leave-absences.controllers",["ui.select","leave-absences.models","leave-absences.models.instances","leave-absences.settings"])}),define("leave-absences/shared/controllers/sub-controllers/leave-calendar-admin.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers","common/models/contract","common/services/notification.service"],function(e,t,n){function a(n,a,o,s,r,i){function c(){return d().then(function(n){var a=n.filter(function(e){var n=e.info.details;return t(n.period_start_date).isSameOrBefore(v.selectedPeriod.end_date)&&(t(n.period_end_date).isSameOrAfter(v.selectedPeriod.start_date)||!n.period_end_date)});return e.uniq(a.map(function(e){return e.contact_id}))})}function l(){return{loadContacts:function(){var e=v.filters.userSettings.assignedTo.type;return m(e).then(function(e){v.lookupContacts=e}).then(function(){return"me"!==e?c():a.resolve(null)}).then(function(e){return v.contactIdsToReduceTo=e,u()}).then(function(e){return e})}}}function u(){return o.all(f(),null,"display_name").then(function(e){return e.list})}function d(){return h?a.resolve(h):r.all()}function m(e){return"me"===e?o.leaveManagees(v.contactId):"unassigned"===e?o.leaveManagees(void 0,{unassigned:!0}):o.all().then(function(e){return e.list})}function f(){return{department:v.filters.userSettings.department?v.filters.userSettings.department.value:null,level_type:v.filters.userSettings.level_type?v.filters.userSettings.level_type.value:null,location:v.filters.userSettings.location?v.filters.userSettings.location.value:null,region:v.filters.userSettings.region?v.filters.userSettings.region.value:null,id:{IN:v.filters.userSettings.contact?[v.filters.userSettings.contact.id]:v.lookupContacts.map(function(e){return e.id})}}}function p(e){i.info("",["<p>When <strong>All</strong> filter is selected, all staff members with contracts which are active in the selected absence period are displayed.</p>","<p><strong>People I approve</strong> filter displays only staff members who you approve leave for.</p>","<p><strong>People without approver</strong> filter displays all staff members with contracts which are active in the selected absence period and who do not have any leave approver assigned.</p>"].join(""))}n.debug("LeaveCalendarAdminController");var h,v;return{init:function(e){return v=e,v.showContactName=!0,v.showFilters=!0,v.filtersByAssignee=[{type:"me",label:"People I approve"},{type:"unassigned",label:"People without approver"},{type:"all",label:"All"}],v.filters.userSettings.assignedTo=v.filtersByAssignee[0],v.showAdminFilteringHint=p,l()}}}n.controller("LeaveCalendarAdminController",["$log","$q","Contact","ContactInstance","Contract","notificationService",a])}),define("leave-absences/shared/controllers/sub-controllers/leave-calendar-manager.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers"],function(e,t,n){function a(e,t,n){function a(){return{loadContacts:function(){return n.init({id:r.contactId}).leaveManagees().then(function(e){r.lookupContacts=e}).then(o)}}}function o(){return t.all(s(),null,"display_name").then(function(e){return e.list})}function s(){return{department:r.filters.userSettings.department?r.filters.userSettings.department.value:null,level_type:r.filters.userSettings.level_type?r.filters.userSettings.level_type.value:null,location:r.filters.userSettings.location?r.filters.userSettings.location.value:null,region:r.filters.userSettings.region?r.filters.userSettings.region.value:null,id:{IN:r.filters.userSettings.contact?[r.filters.userSettings.contact.id]:r.lookupContacts.map(function(e){return e.id})}}}e.debug("LeaveCalendarManagerController");var r;return{init:function(e){return r=e,r.showContactName=!0,r.showFilters=!0,a()}}}n.controller("LeaveCalendarManagerController",["$log","Contact","ContactInstance",a])}),define("leave-absences/shared/controllers/sub-controllers/leave-calendar-staff.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers"],function(e,t,n){function a(e,t){function n(){return{loadContacts:function(){return t.all({id:{in:[a.contactId]}}).then(function(e){return e.list})}}}e.debug("LeaveCalendarStaffController");var a;return{init:function(e){return a=e,a.filters.userSettings.contacts_with_leaves=!1,n()}}}n.controller("LeaveCalendarStaffController",["$log","Contact",a])}),define("leave-absences/shared/components/leave-calendar.component",["common/angular","common/lodash","common/moment","leave-absences/shared/modules/components","leave-absences/shared/controllers/sub-controllers/leave-calendar-admin.controller","leave-absences/shared/controllers/sub-controllers/leave-calendar-manager.controller","leave-absences/shared/controllers/sub-controllers/leave-calendar-staff.controller"],function(e,t,n,a){function o(a,o,s,r,i,c,l,u,d,m){function f(){for(var e=[],t=n(O.selectedPeriod.start_date).clone().startOf("month"),a=n(O.selectedPeriod.end_date).clone().endOf("month");t.isBefore(a);)e.push(T(t)),t.add(1,"month");O.months=e}function p(){r.$new().$watch(function(){return O.selectedMonths},function(t,n){null===n||e.equals(t,n)||w()})}function h(e){O.injectMonths=!0,S("injected").then(function(){w(e)}).then(function(){O.loading.calendar=!1})}function v(){L=a("LeaveCalendar"+t.capitalize(M)+"Controller").init(O)}function b(e){return e.current?"Current Period ("+e.title+")":e.title}function g(){return c.all().then(function(e){O.absencePeriods=t.sortBy(e,"start_date"),O.selectedPeriod=t.find(O.absencePeriods,function(e){return!!e.current})}).then(f).then(I)}function _(){return l.all({is_active:!0}).then(l.loadCalculationUnits)}function y(){return d.valuesOf(["hrleaveandabsences_absence_type_calculation_unit","hrleaveandabsences_leave_request_day_type","hrleaveandabsences_leave_request_status","hrleaveandabsences_toil_amounts"])}function q(){return L.loadContacts().then(function(e){O.contacts=e})}function P(){return d.valuesOf(["hrjc_region","hrjc_location","hrjc_level_type","hrjc_department"]).then(function(e){O.filters.optionValues.regions=e.hrjc_region,O.filters.optionValues.locations=e.hrjc_location,O.filters.optionValues.levelTypes=e.hrjc_level_type,O.filters.optionValues.departments=e.hrjc_department})}function C(){return u.all()}function D(){return o.all([_(),C(),y()]).then(function(e){O.supportData.absenceTypes=e[0],O.supportData.publicHolidays=e[1],O.supportData.calculationUnits=e[2].hrleaveandabsences_absence_type_calculation_unit,O.supportData.dayTypes=e[2].hrleaveandabsences_leave_request_day_type,O.supportData.leaveRequestStatuses=e[2].hrleaveandabsences_leave_request_status,O.supportData.toilAmounts=t.indexBy(e[2].hrleaveandabsences_toil_amounts,"value")})}function A(){var e=o.resolve();return O.injectMonths&&(e=S("destroyed"),O.injectMonths=!1),e}function T(e){return{index:e.month(),year:e.year(),name:e.format("MMMM"),shortName:e.format("MMM")}}function R(e){e=t.includes(["contacts","period"],e)?e:"period",o.resolve().then(function(){O.loading.calendar=!0}).then(A).then("period"===e?f:t.noop).then("contacts"===e?q:t.noop).then(function(){h("contacts"===e)})}function w(e){var n=O.selectedMonths.length?O.months.filter(function(e){return t.includes(O.selectedMonths,e.index)}):O.months;r.$emit("LeaveCalendar::showMonths",n,!!e)}function I(){O.selectedMonths=[n().month()]}function k(){return O.roleOverride?o.resolve().then(function(){M=O.roleOverride}):o.all([m(i.permissions.admin.administer),m(i.permissions.ssp.manage)]).then(function(e){M=e[0]?"admin":e[1]?"manager":"staff"})}function S(e){return o(function(n){var a=0,o=r.$on("LeaveCalendar::month"+t.capitalize(e),function(){++a===O.months.length&&(o(),n())})})}s.debug("Component: leave-calendar");var L,M,O=this;O.absencePeriods=[],O.contacts=[],O.contactIdsToReduceTo=null,O.injectMonths=!1,O.months=[],O.selectedMonths=null,O.selectedPeriod=null,O.showContactName=!1,O.showFilters=!1,O.supportData={},O.loading={calendar:!0,page:!0},O.filters={optionValues:{},userSettings:{contact:null,contacts_with_leaves:!0,department:null,level_type:null,location:null,region:null}},O.labelPeriod=b,O.refresh=R,function(){k().then(p).then(v).then(A).then(g).then(function(){return o.all([q(),D()])}).then(function(){return O.showFilters?P():t.noop}).then(function(){h()}).then(function(){O.loading.page=!1})}()}a.component("leaveCalendar",{bindings:{contactId:"<",roleOverride:"@?"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar.html"}],controllerAs:"calendar",controller:["$controller","$q","$log","$rootScope","shared-settings","AbsencePeriod","AbsenceType","PublicHoliday","OptionGroup","checkPermissions",o]})}),define("leave-absences/shared/components/leave-calendar-day.component",["common/lodash","common/moment","leave-absences/shared/modules/components"],function(e,t,n){function a(n,a,o){"use strict";function s(){y.calculationUnit=r(y.supportData.calculationUnits,"value",b.calculation_unit)}function r(t,n,a){return e.find(t,function(e){return+e[n]==+a})}function i(){var e,n;return n=t(y.contactData.leaveRequest.from_date).isSame(y.contactData.leaveRequest.to_date,"day"),e=n?"single-date":"multiple-dates","type-"+y.calculationUnit.name+"-on-"+e+"-tooltip"}function c(){b=r(y.supportData.absenceTypes,"id",y.contactData.leaveRequest.type_id),y.contactData.leaveRequest["type_id.title"]=b.title}function l(){"days"===y.calculationUnit.name&&(g=r(y.supportData.dayTypes,"value",y.contactData.leaveRequest.from_date_type),_=r(y.supportData.dayTypes,"value",y.contactData.leaveRequest.to_date_type),y.contactData.leaveRequest["from_date_type.label"]=g.label,y.contactData.leaveRequest["to_date_type.label"]=_.label)}function u(e,t,n,a,s){e.stopPropagation(),o.openModal(t,n,a,s)}function d(){y.dates.from=new Date(y.contactData.leaveRequest.from_date),y.dates.to=new Date(y.contactData.leaveRequest.to_date)}function m(){y.contactData.isAccruedTOIL?y.label="AT":"days"===y.calculationUnit.name?f():p()}function f(){y.label=y.contactData.isAM?"AM":y.contactData.isPM?"PM":""}function p(){var e=t(y.contactData.leaveRequest.from_date).isSame(y.date,"day"),n=t(y.contactData.leaveRequest.to_date).isSame(y.date,"day");y.label=e?t(y.contactData.leaveRequest.from_date).format("HH:mm"):n?t(y.contactData.leaveRequest.to_date).format("HH:mm"):""}function h(){y.tooltipTemplate=y.contactData.isAccruedTOIL?"accrued-toil-tooltip":i()}function v(){a.$watch("day.contactData.leaveRequest",function(){y.contactData&&y.contactData.leaveRequest&&(c(),s(),l(),m(),d(),h())})}n.debug("Component: leave-calendar-day");var b,g,_,y=this;y.calculationUnit="",y.dates={from:null,to:null},y.label="",y.tooltipTemplate=null,y.openLeavePopup=u,function(){v()}()}n.component("leaveCalendarDay",{bindings:{contactData:"<",date:"<",supportData:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar-day.html"}],controllerAs:"day",controller:a}),a.$inject=["$log","$scope","LeavePopup"]}),define("leave-absences/shared/components/leave-calendar-legend.component",["leave-absences/shared/modules/components"],function(e){function t(e){function t(e){return{backgroundColor:e.color,borderColor:e.color}}e.debug("Component: leave-calendar-legend");var n=this;n.legendCollapsed=!0,n.getAbsenceTypeStyle=t}e.component("leaveCalendarLegend",{bindings:{absenceTypes:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar-legend.html"}],
controllerAs:"legend",controller:["$log",t]})}),define("leave-absences/shared/components/leave-calendar-month.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/pub-sub"],function(e,t,n){function a(n,a,o,s,r,i,c){function l(e){g([e]),B(e)}function u(e){return{index:e.month(),year:e.year(),name:e.format("MMMM"),loading:!0,days:d(e)}}function d(n){var a=t(),o=n.clone().startOf("month");return e.map(e.times(n.daysInMonth()),function(){var e={date:o.format("YYYY-MM-DD"),name:o.format("ddd"),index:o.format("D"),current:a.isSame(o,"day"),enabled:o.isSameOrAfter(U.period.start_date)&&o.isSameOrBefore(U.period.end_date),contactsData:{}};return o.add(1,"day"),e})}function m(e){return F[e]}function f(){return U.showOnlyWithLeaveRequests?U.contacts.filter(function(t){return e.includes(Object.keys(j),t.id)}):U.contacts}function p(e){return t(e,c.serverDateFormat)}function h(e){k(e),B(e)}function v(){return U.contactIdsToReduceTo&&(U.contacts=U.contacts.filter(function(t){return e.includes(U.contactIdsToReduceTo,t.contact_id)||e.find(j,function(e){return e.contact_id===t.contact_id})})),a.resolve()}function b(){U.supportData.dayTypes=e.indexBy(U.supportData.dayTypes,"name"),U.supportData.leaveRequestStatuses=e.indexBy(U.supportData.leaveRequestStatuses,"value"),U.supportData.publicHolidays=e.transform(U.supportData.publicHolidays,function(e,t){e[p(t.date).valueOf()]=t},{})}function g(e){return e.forEach(function(e){var t=D(e);j[e.contact_id]=j[e.contact_id]||{},t.forEach(function(t){j[e.contact_id][t.date]=e})}),a.resolve()}function _(){N.push(o.$on("LeaveCalendar::showMonths",O)),N.push(i.subscribe("LeaveRequest::new",l)),N.push(i.subscribe("LeaveRequest::edit",x)),N.push(i.subscribe("LeaveRequest::updatedByManager",x)),N.push(i.subscribe("LeaveRequest::delete",h)),N.push(i.subscribe("LeaveRequest::statusUpdate",function(e){"delete"===e.status?h(e.leaveRequest):x(e.leaveRequest)}))}function y(e,n,a){var o=U.supportData.dayTypes[e];return t(a).isSame(n.from_date)?o.value===n.from_date_type:t(a).isSame(n.to_date)?o.value===n.to_date_type:void 0}function q(e,t){return e.request_type===t}function P(e){return!!U.supportData.publicHolidays[p(e).valueOf()]}function C(t){var n=U.supportData.leaveRequestStatuses[t.status_id].name;return e.contains([c.statusNames.awaitingApproval,c.statusNames.moreInformationRequired],n)}function D(n){for(var a=[],o=t(n.from_date).clone(),s=t(n.to_date);o.isSameOrBefore(s);)o.month()===U.month.index&&o.year()===U.month.year&&a.push(e.find(U.month.days,function(e){return e.date===o.format("YYYY-MM-DD")})),o.add(1,"day");return a}function A(t){return e.find(j[t.contact_id],function(e){return t.id===e.id})}function T(t){var n=e.find(U.supportData.leaveRequestStatuses,function(e){return e.name===t});return n?n.value:null}function R(){return U.month.loading=!0,a.all([I(),w()]).then(v).then(M).then(function(){E=!0}).then(function(){U.month.loading=!1})}function w(){return r.all({from_date:{to:U.month.days[U.month.days.length-1].date},to_date:{from:U.month.days[0].date},status_id:{IN:[T(c.statusNames.approved),T(c.statusNames.adminApproved),T(c.statusNames.awaitingApproval),T(c.statusNames.moreInformationRequired)]},contact_id:{IN:U.contacts.map(function(e){return e.id})},type_id:{IN:e.pluck(U.supportData.absenceTypes,"id")}},null,null,null,!1).then(function(e){return g(e.list)})}function I(){var t=U.month.days[0].date,n=U.month.days[U.month.days.length-1].date;return s.get(U.contacts.map(function(e){return e.id}),t,n).then(function(t){F=e.indexBy(t,"contact_id")})}function k(t){j[t.contact_id]=e.omit(j[t.contact_id],function(e){return e.id===t.id})}function S(){o.$emit("LeaveCalendar::monthDestroyed"),N.map(function(e){e.remove?e.remove():e()})}function L(t,n,o){var s,r;return t.contactsData[n]=t.contactsData[n]||{},r=m(n),s=!0===o?a.resolve():a.all([r.isWeekend(p(t.date)),r.isNonWorkingDay(p(t.date))]).then(function(a){e.assign(t.contactsData[n],{isWeekend:a[0],isNonWorkingDay:a[1],isPublicHoliday:P(t.date)})}),s.then(function(){return j[n]?j[n][t.date]:null}).then(function(a){e.assign(t.contactsData[n],{leaveRequest:a||null,styles:a?$(a):null,isAccruedTOIL:a?q(a,"toil"):null,isRequested:a?C(a):null,isAM:a?y("half_day_am",a,t.date):null,isPM:a?y("half_day_pm",a,t.date):null})})}function M(){return a.all(U.month.days.map(function(e){return a.all(U.contacts.map(function(t){return L(e,t.id)}))}))}function O(t,n,a){!e.find(n,function(e){return e.index===U.month.index})?U.visible=!1:(U.currentPage=0,U.visible=!0,(a||!E)&&R())}function $(t){var n=e.find(U.supportData.absenceTypes,function(e){return e.id===t.type_id});return t.balance_change>0?{borderColor:n.color}:{borderColor:n.color,backgroundColor:n.color}}function x(e){h(A(e)),l(e)}function B(e){return a.all(D(e).map(function(t){return L(t,e.contact_id,!0)}))}n.debug("Component: leave-calendar-month");var E=!1,N=[],F={},j={},U=this;U.currentPage=0,U.pageSize=20,U.visible=!1,U.showContactName=!!U.showContactName,U.showOnlyWithLeaveRequests=!!U.showOnlyWithLeaveRequests,U.$onDestroy=S,U.contactsList=f,function(){var e=t().month(U.month.index).year(U.month.year);b(),_(),U.month=u(e),o.$emit("LeaveCalendar::monthInjected")}()}n.component("leaveCalendarMonth",{bindings:{contacts:"<",contactIdsToReduceTo:"<",month:"<",period:"<",showContactName:"<",showOnlyWithLeaveRequests:"<",supportData:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar-month.html"}],controllerAs:"month",controller:["$log","$q","$rootScope","Calendar","LeaveRequest","pubSub","shared-settings",a]})}),define("leave-absences/shared/components/leave-request-actions.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/hr-settings","common/services/notification.service","common/services/pub-sub"],function(e,t,n){function a(n,a,o,s,r,i,c){function l(e){var t=y[e].dialog;b=g.leaveRequest.status_id,o.open({title:"Confirm "+t.title+"?",copyCancel:"Cancel",copyConfirm:t.btnLabel,classConfirm:"btn-"+t.btnClass,msg:t.msg,onConfirm:function(){return g.leaveRequest[e]().then(function(){p(e)}).catch(function(e){c.error("Error:",e)})}})}function u(){return"admin"===g.role&&"public_holiday"===g.leaveRequest.request_type}function d(n){var a=g.absenceTypes[g.leaveRequest.type_id].allow_request_cancelation;return"admin"===g.role||!!e.includes([_.awaitingApproval,_.moreInformationRequired],n)&&("manager"===g.role||("3"===a?t().isBefore(g.leaveRequest.from_date):"2"===a))}function m(){e.isArray(g.leaveRequestStatuses)&&(g.leaveRequestStatuses=e.indexBy(g.leaveRequestStatuses,"value")),e.isArray(g.absenceTypes)&&(g.absenceTypes=e.indexBy(g.absenceTypes,"id"))}function f(e,t,n,a,o){e.stopPropagation(),s.openModal(t,n,a,o)}function p(t){var n=e.find(g.leaveRequestStatuses,function(e){return e.name===i.statusNames.awaitingApproval}).value;b===n&&r.publish("ManagerBadge:: Update Count"),r.publish("LeaveRequest::statusUpdate",{status:t,leaveRequest:g.leaveRequest})}function h(){var t=g.leaveRequestStatuses[g.leaveRequest.status_id].name,n=e.compact(e.map(y,function(n,a){return e.includes(n.allowedStatuses,t)?a:null}));!d(t)&&e.pull(n,"cancel"),"admin"!==g.role&&e.pull(n,"delete"),"staff"===g.role&&e.pull(n,"approve","reject"),"staff"!==g.role&&v(n),u()&&n.push("delete"),g.allowedActions=e.map(n,function(e){return{key:e,label:y[e].label,isDirectAction:y[e].isDirectAction}})}function v(t){e.each(t,function(n,a){"edit"===n&&(t[a]="respond"),e.includes(["respond","view"],n)&&(t[a]="edit")})}n.debug("Component: leave-request-action-dropdown");var b,g=this,_=i.statusNames,y={edit:{label:"Edit",allowedStatuses:[_.awaitingApproval]},respond:{label:"Respond",allowedStatuses:[_.moreInformationRequired]},view:{label:"View",allowedStatuses:[_.approved,_.rejected,_.cancelled]},approve:{label:"Approve",isDirectAction:!0,allowedStatuses:[_.awaitingApproval],dialog:{title:"Approval",btnClass:"success",btnLabel:"Approve",msg:"Please confirm approval"}},reject:{label:"Reject",isDirectAction:!0,allowedStatuses:[_.awaitingApproval],dialog:{title:"Rejection",btnClass:"warning",btnLabel:"Reject",msg:"Please confirm rejection"}},cancel:{label:"Cancel",isDirectAction:!0,allowedStatuses:[_.awaitingApproval,_.approved,_.rejected,_.moreInformationRequired],dialog:{title:"Cancellation",btnClass:"danger",btnLabel:"Confirm",msg:"Please confirm cancellation"}},delete:{label:"Delete",isDirectAction:!0,allowedStatuses:[_.awaitingApproval,_.moreInformationRequired,_.approved,_.rejected,_.cancelled],dialog:{title:"Deletion",btnClass:"danger",btnLabel:"Confirm",msg:"This cannot be undone"}}};g.allowedActions=[],g.action=l,g.openLeavePopup=f,function(){m(),h()}()}n.component("leaveRequestActions",{bindings:{leaveRequest:"<",leaveRequestStatuses:"<",absenceTypes:"<",role:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-actions.html"}],controllerAs:"actions",controller:a}),a.$inject=["$log","$rootScope","dialog","LeavePopup","pubSub","shared-settings","notificationService"]}),define("leave-absences/shared/components/leave-request-popup-comments-tab.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/hr-settings","common/models/session.model"],function(e,t,n){function a(n,a,o,s,r,i){function c(){var t=e.indexBy(m.request.comments,"contact_id"),n=Object.keys(t);return r.all({id:{IN:n}},{page:1,size:0}).then(function(t){m.comment.contacts=e.indexBy(t.list,"contact_id")})}function l(){return m.request.loadComments().then(function(){a.$broadcast("LeaveRequestPopup::requestObjectUpdated"),m.request.comments.length&&c()})}function u(){return m.loading.component=!0,i.get().then(function(e){d=e.contactId}).then(function(){m.loading.component=!1})}n.debug("Component: leave-request-popup-comments-tab");var d=null,m=this;m.loading={component:!0},m.comment={text:"",contacts:{}},function(){l(),u()}(),m.addComment=function(){m.request.comments.push({contact_id:d,leave_request_id:m.request.id,text:m.comment.text}),m.comment.text=""},m.formatDateTime=function(e){return t.utc(e,s.serverDateTimeFormat).local().format(o.DATE_FORMAT.toUpperCase()+" HH:mm")},m.getActiveComments=function(){return m.request.comments.filter(function(e){return!e.toBeDeleted})},m.getCommentorName=function(e){return e===d?"Me":m.comment.contacts[e]?m.comment.contacts[e].display_name:void 0},m.isMode=function(e){return m.mode===e},m.orderComment=function(e){return t(e.created_at,s.serverDateTimeFormat)},m.removeCommentVisibility=function(e){return!e.comment_id||m.canManage}}n.component("leaveRequestPopupCommentsTab",{bindings:{canManage:"<",mode:"<",request:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-popup/leave-request-popup-comments-tab.html"}],controllerAs:"commentsCtrl",controller:["$log","$rootScope","HR_settings","shared-settings","Contact","Session",a]})}),define("leave-absences/shared/components/leave-request-popup-details-tab.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/models/session.model","leave-absences/shared/models/calendar.model"],function(e,t,n){function a(n,a,o,s,r,i,c,l,u,d,m,f){function p(){return ae._setDateAndTypes(),ae._toggleBalance(),ae._canCalculateChange()?(ae.loading.showBalanceChange=!0,ae.request.calculateBalanceChange(ae.selectedAbsenceType.calculation_unit_name).then(E).catch(P)):r.resolve()}function h(){ae._reset(),ae._calculateOpeningAndClosingBalance()}function v(e){return t(e).format("HH:mm")}function b(t,n){var a;return t?(a=ae.requestDayTypes.slice(0),t=ae._convertDateToServerFormat(t),d.isPublicHoliday(t).then(function(n){return n?a.filter(function(e){return"public_holiday"===e.name}):g(t,a).then(function(t){return t.length?t:a.filter(function(t){return e.includes(["all_day","half_day_am","half_day_pm"],t.name)})})}).then(function(e){return F(n,e),e})):r.reject([])}function g(e,n){return e=t(e),r.all([ae.calendar.isNonWorkingDay(e),ae.calendar.isWeekend(e)]).then(function(e){return e[0]?"non_working_day":e[1]?"weekend":null}).then(function(e){return e?n.filter(function(t){return t.name===e}):[]})}function _(){return ae.request?ae.request.request_type:ae.leaveType||null}function y(){return e.find(ae.absenceTypes,function(e){return e.id===ae.request.type_id})}function q(){return ae._setDateAndTypes(),ae._toggleBalance(),ae.loading.showBalanceChange=!0,ae.request.getBalanceChangeBreakdown().then(E).catch(P)}function P(t){o.$broadcast("LeaveRequestPopup::handleError",e.isArray(t)?t:[t]),ae.loading.fromDayTypes=!1,ae.loading.showBalanceChange=!1,ae.loading.tab=!1,ae.loading.toDayTypes=!1}function C(){return ae.isMode("edit")?q():p()}function D(e){return ae.selectedAbsenceType.calculation_unit_name===e}function A(e){return ae.request.request_type===e}function T(){var e;return ae.isMode("create")?r.resolve():(e=ae.request.attributes(),ae.uiOptions.fromDate=ae._convertDateFormatFromServer(ae.request.from_date),ae.loadAbsencePeriodDatesTypes(ae.uiOptions.fromDate,"from").then(function(){return ae.request.to_date=e.to_date,ae.request.to_date_type=e.to_date_type,ae.uiOptions.toDate=ae._convertDateFormatFromServer(ae.request.to_date),ae.loadAbsencePeriodDatesTypes(ae.uiOptions.toDate,"to")}))}function R(){ne.push(o.$on("LeaveRequestPopup::updateBalance",function(){ae.updateBalance(),N()}))}function w(){var t=ae.uiOptions.times,n=ae.request;!ae.isMode("create")&&D("hours")&&e.each(["from","to"],function(e){t[e].skipValueSetting=!0,t[e].time=v(n[e+"_date"]),t[e].amount=n[e+"_date_amount"],t[e].maxAmount=t[e].amount})}function I(){ae.isMode("view")||A("toil")||e.each(["from","to"],function(e){s.$watch("detailsTab.uiOptions.times."+e+".amount",function(e,t){if(!D("days")&&+e!=+t)return ae.calculateBalanceChange()}),s.$watch("detailsTab.uiOptions.times."+e+".time",function(e,t){D("days")||+e==+t||ae._setDateAndTypes()}),s.$watch("detailsTab.uiOptions."+e+"Date",function(t){return O(t,e)})})}function k(){ae.isMode("edit")&&(ae.isLeaveStatus(c.statusNames.approved)||ae.isLeaveStatus(c.statusNames.adminApproved))&&(te={absenceTypeId:ae.request.type_id,value:ae.selectedAbsenceType.remainder-ae.request.balance_change})}function S(t){return e.includes(["weekend","non_working_day","public_holiday"],t)}function L(e,t){var n=ae.period.id;return t=t||"from",ae.loading[t+"DayTypes"]=!0,ae._checkAndSetAbsencePeriod(e).then(function(){if(n!==ae.period.id)return ae.uiOptions.multipleDays&&"from"===t&&(ae.uiOptions.showBalance=!1,ae.uiOptions.toDate=null,ae.request.to_date=null,ae.request.to_date_type=null),r.all([ae._loadCalendar()])}).then(function(){return ae._setMinMaxDate(),b(e,t)}).finally(function(){ae.loading[t+"DayTypes"]=!1})}function M(){return u.valuesOf("hrleaveandabsences_leave_request_day_type").then(function(e){ae.requestDayTypes=e})}function O(e,t){var n=ae.uiOptions.times[t];return e?(n.loading=!0,n.disabled=!0,n.skipValueSetting||(n.time="",n.amount="0"),ae.request.getWorkDayForDate(e).then(function(e){n.min=e.time_from||"00:00",n.max=e.time_to||"00:00",n.maxAmount=e.number_of_hours.toString()||"0",n.disabled=!1,n.skipValueSetting||(n.time="to"===t?n.max:n.min,n.amount=n.maxAmount)}).catch(P).finally(function(){n.loading=!1,n.skipValueSetting=!1})):r.resolve()}function $(){var e=(ae.pagination.currentPage-1)*ae.pagination.numPerPage,t=e+ae.pagination.numPerPage;ae.pagination.filteredbreakdown=ae.balance.change.breakdown.slice(e,t)}function x(){ae.pagination.totalItems=ae.balance.change.breakdown.length,ae.pagination.filteredbreakdown=ae.balance.change.breakdown,ae.pagination.pageChanged()}function B(e){return z(e.from_date)===z(e.to_date)}function E(e){e&&(ae.balance.change=e,ae._calculateOpeningAndClosingBalance(),x()),ae.loading.showBalanceChange=!1}function N(){!ae.isMode("create")&&B(ae.request)||ae.isMode("create")&&(ae.isLeaveType("sickness")||D("hours"))?ae.uiOptions.multipleDays=!1:ae.uiOptions.multipleDays=!0}function F(t,n){var a="request"+e.startCase(t)+"DayTypes";ae[a]=n,ae.isMode("create")&&(ae.request[t+"_date_type"]=ae[a][0].value)}function j(){e.forEach(ne,function(e){e()})}function U(e,t){return ae.loadAbsencePeriodDatesTypes(e,t).then(function(){return ae.updateBalance()}).catch(function(e){P(e),ae._setDateAndTypes(),ae._toggleBalance()})}function W(){ae.selectedAbsenceType=y(),ae.balance.opening=ae.selectedAbsenceType.remainder,ae.calculateBalanceChange()}function H(){var e=!!ae.request.from_date&&!!ae.request.to_date;return D("days")&&(e=e&&!!ae.request.from_date_type&&!!ae.request.to_date_type),e}function G(){te&&te.absenceTypeId===ae.selectedAbsenceType.id?ae.balance.opening=te.value||0:ae.balance.opening=ae.selectedAbsenceType.remainder,ae.balance.closing=ae.balance.opening+ae.balance.change.amount}function V(n){var a=t(n).format(ae.uiOptions.userDateFormat.toUpperCase());return ae.period=e.find(ae.absencePeriods,function(e){return e.isInPeriod(a)}),ae.period?r.resolve(!0):(ae.period={},ae.loading.fromDayTypes=!1,r.reject("Please change date as it is not in any absence period"))}function Y(e){return t(e,c.serverDateFormat).toDate()}function z(e){return t(e).format(c.serverDateFormat)}function X(){return l.get(ae.request.contact_id,ae.period.start_date,ae.period.end_date).then(function(e){ae.calendar=e})}function J(){var e,t=ae.uiOptions,n=ae.request;n.from_date=t.fromDate?ae._convertDateToServerFormat(t.fromDate):null,n.to_date=t.toDate?ae._convertDateToServerFormat(t.toDate):null,D("hours")&&!A("toil")&&(e=t.times,n.from_date=n.from_date&&e.from.time?n.from_date+" "+e.from.time:null,n.to_date=n.to_date&&e.to.time?n.to_date+" "+e.to.time:null,n.from_date_amount=isNaN(+e.from.amount)?null:e.from.amount,n.to_date_amount=isNaN(+e.to.amount)?null:e.to.amount),!t.multipleDays&&t.fromDate&&(t.toDate=t.fromDate,n.to_date=n.from_date)}function K(){ae._setDates(),!ae.uiOptions.multipleDays&&ae.uiOptions.fromDate&&(ae.request.to_date_type=ae.request.from_date_type)}function Q(){if(ae.uiOptions.fromDate){var e=t(ae.uiOptions.fromDate).add(1,"d").toDate();ae.uiOptions.date.to.options.minDate=e,ae.uiOptions.date.to.options.initDate=e,ae.uiOptions.toDate&&t(ae.uiOptions.toDate).isBefore(ae.uiOptions.fromDate)&&(ae.uiOptions.toDate=ae.uiOptions.fromDate)}else ae.uiOptions.date.to.options.minDate=ae._convertDateFormatFromServer(ae.period.start_date),ae.uiOptions.date.to.options.initDate=ae.uiOptions.date.to.options.minDate;ae.uiOptions.date.to.options.maxDate=ae._convertDateFormatFromServer(ae.period.end_date)}function Z(){ae.uiOptions.toDate=ae.uiOptions.fromDate,ae.request.to_date_type=ae.request.from_date_type,ae.request.to_date=ae.request.from_date,ae.calculateBalanceChange()}function ee(){var e=ae.uiOptions,t=ae.request;e.multipleDays?(e.showBalance=!!t.from_date&&!!t.to_date&&!!ae.period.id,D("days")&&(e.showBalance=e.showBalance&&!!t.from_date_type&&!!t.to_date_type)):(e.showBalance=!!t.from_date&&!!ae.period.id,D("days")&&(e.showBalance=e.showBalance&&!!t.from_date_type))}a.debug("Component: leave-request-popup-details-tab");var te=null,ne=[],ae=this;ae.canManage=!1,ae.calendar={},ae.errors=[],ae.requestDayTypes=[],ae.statusNames=c.statusNames,ae.loading={tab:!1,showBalanceChange:!1,fromDayTypes:!1,toDayTypes:!1},ae.pagination={currentPage:1,filteredbreakdown:ae.balance.change.breakdown,numPerPage:7,totalItems:ae.balance.change.breakdown.length,pageChanged:$},ae.uiOptions={isChangeExpanded:!1,multipleDays:!0,userDateFormat:i.DATE_FORMAT,showBalance:!1,date:{from:{show:!1,options:{startingDay:1,showWeeks:!1}},to:{show:!1,options:{minDate:null,maxDate:null,startingDay:1,showWeeks:!1}},expiry:{show:!1,options:{minDate:null,maxDate:null,startingDay:1,showWeeks:!1}}},times:{from:{time:"",amount:0,maxAmount:0,disabled:!0,loading:!1,skipValueSetting:!1},to:{time:"",amount:0,maxAmount:0,disabled:!0,loading:!1,skipValueSetting:!1}}},ae.calculateBalanceChange=p,ae.changeInNoOfDays=h,ae.isLeaveType=A,ae.isNotWorkingDay=S,ae.loadAbsencePeriodDatesTypes=L,ae.updateAbsencePeriodDatesTypes=U,ae.updateBalance=W,ae._canCalculateChange=H,ae._calculateOpeningAndClosingBalance=G,ae._checkAndSetAbsencePeriod=V,ae._convertDateFormatFromServer=Y,ae._convertDateToServerFormat=z,ae._loadCalendar=X,ae._reset=Z,ae._setDates=J,ae._setDateAndTypes=K,ae._setMinMaxDate=Q,ae._toggleBalance=ee,ae.$onDestroy=j,function(){n(e.capitalize(_(ae.leaveType,ae.request))+"RequestCtrl",{parentCtrl:ae}),ae.canManage=ae.isRole("manager")||ae.isRole("admin"),ae.loading.tab=!0,R(),ae.initChildController().then(function(){return r.all([ae._loadCalendar(),M()])}).then(T).then(w).then(k).then(function(){return r.all([N(),C()])}).then(I).catch(P).finally(function(){ae.loading.tab=!1})}()}n.component("leaveRequestPopupDetailsTab",{bindings:{absencePeriods:"<",absenceTypes:"<",balance:"=",checkSubmitConditions:"=",request:"<",isLeaveStatus:"<",leaveType:"<",isMode:"<",isSelfRecord:"<",period:"=",isRole:"<",selectedAbsenceType:"="},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-popup/leave-request-popup-details-tab.html"}],controllerAs:"detailsTab",controller:a}),a.$inject=["$controller","$log","$rootScope","$scope","$q","HR_settings","shared-settings","Calendar","OptionGroup","PublicHoliday","LeaveRequest","$timeout"]}),define("leave-absences/shared/components/leave-request-popup-files-tab",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/file-upload","common/services/file-mime-types","common/services/hr-settings"],function(e,t,n){function a(n,a,o,s,r,i,c,l){function u(){return e.filter(C.request.files,function(e){return e.toBeDeleted})}function d(){return C.fileUploader&&C.fileUploader.queue?C.fileUploader.queue:[]}function m(){q.push(a.$on("LeaveRequestPopup::submit",_))}function f(){v().then(function(){C.fileUploader=c.uploader({entityTable:"civicrm_hrleaveandabsences_leave_request",crmAttachmentToken:r.attachmentToken,queueLimit:r.fileUploader.queueLimit,allowedMimeTypes:P})})}function p(){return y.length>0?y.map(function(e){return e.label}).join(", "):""}function h(){return C.request.loadAttachments().then(function(){a.$broadcast("LeaveRequestPopup::requestObjectUpdated")})}function v(){return o.all(y.map(function(e){return l.getMimeTypeFor(e.label).then(function(t){P[e.label]=t})})).catch(function(){P=null})}function b(){return i.valuesOf("safe_file_extension").then(function(e){y=e})}function g(){e.forEach(q,function(e){e()})}function _(e,t){C.fileUploader.queue&&C.fileUploader.queue.length>0?C.fileUploader.uploadAll({entityID:C.request.id}).then(function(){t()}).catch(t):t()}n.debug("Component: leave-request-popup-files-tab");var y=[],q=[],P={},C=Object.create(this);return C.filesLoaded=!1,C.today=Date.now(),C.userDateFormatWithTime=s.DATE_FORMAT+" HH:mm",C.userDateFormat=s.DATE_FORMAT,C.listFileTypes=p,C.$onDestroy=g,C.canUploadMore=function(){return C.getFilesCount()<r.fileUploader.queueLimit},C.formatDateTime=function(e){return t(e,r.serverDateTimeFormat).format(C.userDateFormat.toUpperCase()+" HH:mm")},C.getAuthorName=function(e){if(e===C.request.contact_id)return"Me -"},C.getFilesCount=function(){var e=u(),t=d();return C.request.files.length+t.length-e.length},C.removeAttachmentVisibility=function(e){return!e.attachment_id||C.canManage},function(){a.$broadcast("LeaveRequestPopup::childComponent::register"),m(),o.all([b(),h()]).then(f).finally(function(){C.filesLoaded=!0})}(),C}n.component("leaveRequestPopupFilesTab",{bindings:{canManage:"<",fileUploader:"=",mode:"<",request:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-popup/leave-request-popup-files-tab.html"}],controllerAs:"filesTab",controller:["$log","$rootScope","$q","HR_settings","shared-settings","OptionGroup","FileUpload","fileMimeTypes",a]})}),define("leave-absences/shared/components/leave-request-record-actions.component",["leave-absences/shared/modules/components","common/services/hr-settings"],function(e){function t(e,t){function n(e,n,a,o){t.openModal.apply(t,arguments)}e.debug("Component: leave-request-record-actions");var a=this;a.leaveRequestOptions=[{type:"leave",icon:"briefcase",label:"Leave"},{type:"sickness",icon:"stethoscope",label:"Sickness"},{type:"toil",icon:"calendar-plus-o",label:"Overtime"}],a.openLeavePopup=n}e.component("leaveRequestRecordActions",{bindings:{btnClass:"@",contactId:"<",selectedContactId:"<",isSelfRecord:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-record-actions.html"}],controllerAs:"vm",controller:["$log","LeavePopup",t]})}),define("leave-absences/shared/components/staff-leave-report.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/pub-sub"],function(e,t,n){function a(t,n,a,o,s,r,i,c,l,u,d,m){function f(e,t){t.data.push(e),t.dataIndex[e.id]=e}function p(e){$(e),U.sections.other.open&&f(e,U.sections.other)}function h(){Object.values(U.sections).forEach(function(e){e.data=[]})}function v(e){var t=j[e.status];t?t(e.leaveRequest):U.refresh()}function b(t){t.dataIndex=e.indexBy(t.data,"id")}function g(e){return e.current?"Current Period ("+e.title+")":e.title}function _(){return s.all().then(function(t){U.absencePeriods=e.sortBy(t,"start_date"),U.selectedPeriod=e.find(U.absencePeriods,function(e){return!0===e.current})})}function y(){return r.all().then(r.loadCalculationUnits).then(function(t){U.absenceTypes=e.indexBy(t,"id")})}function q(){return c.all({contact_id:U.contactId,from_date:{from:U.selectedPeriod.start_date},to_date:{to:U.selectedPeriod.end_date},status_id:N(m.statusNames.approved),type_id:{IN:e.keys(U.absenceTypes)}},null,F,null,!1).then(function(e){U.sections.approved.data=e.list})}function P(){return n.all([c.balanceChangeByAbsenceType(U.contactId,U.selectedPeriod.id,null,!0),c.balanceChangeByAbsenceType(U.contactId,U.selectedPeriod.id,[N(m.statusNames.approved)]),c.balanceChangeByAbsenceType(U.contactId,U.selectedPeriod.id,[N(m.statusNames.awaitingApproval),N(m.statusNames.moreInformationRequired)])]).then(function(t){e.forEach(U.absenceTypes,function(e){e.balanceChanges={holidays:t[0][e.id],approved:t[1][e.id],pending:t[2][e.id]}})})}function C(){return i.all({contact_id:U.contactId,period_id:U.selectedPeriod.id},!0).then(function(e){U.entitlements=e}).then(function(){U.absenceTypesFiltered=e.filter(U.absenceTypes,function(t){var n=e.find(U.entitlements,function(e){return e.type_id===t.id});return t.entitlement=n?n.value:0,t.remainder=n?n.remainder:{current:0,future:0},!(0===t.entitlement&&"1"!==t.allow_overuse&&"1"!==t.allow_accruals_request)})})}function D(){return i.breakdown({contact_id:U.contactId,period_id:U.selectedPeriod.id},U.entitlements).then(function(){return L(U.entitlements)}).then(function(e){U.sections.entitlements.data=e})}function A(){return n.all([i.breakdown({contact_id:U.contactId,period_id:U.selectedPeriod.id,expired:!0}),c.all({contact_id:U.contactId,from_date:{from:U.selectedPeriod.start_date},to_date:{to:U.selectedPeriod.end_date},request_type:"toil",expired:!0,type_id:{IN:e.keys(U.absenceTypes)}},null,F,null,!1)]).then(function(e){return n.all({expiredBalanceChangesFlatten:L(e[0]),expiredTOILS:M(e[1].list)})}).then(function(t){U.sections.expired.data=t.expiredBalanceChangesFlatten.concat(t.expiredTOILS),U.sections.expired.data=e.sortBy(U.sections.expired.data,"expiry_date")})}function T(){return n.all(Object.values(U.sections).filter(function(e){return e.open}).map(k))}function R(){return c.all({contact_id:U.contactId,from_date:{from:U.selectedPeriod.start_date},to_date:{to:U.selectedPeriod.end_date},status_id:{in:[N(m.statusNames.rejected),N(m.statusNames.cancelled)]},type_id:{IN:e.keys(U.absenceTypes)}},null,F,null,!1).then(function(e){U.sections.other.data=e.list})}function w(){return c.all({contact_id:U.contactId,from_date:{from:U.selectedPeriod.start_date},to_date:{to:U.selectedPeriod.end_date},status_id:{in:[N(m.statusNames.awaitingApproval),N(m.statusNames.moreInformationRequired)]},type_id:{IN:e.keys(U.absenceTypes)}},null,F,null,!1).then(function(e){U.sections.pending.data=e.list})}function I(){return c.all({contact_id:U.contactId,from_date:{from:U.selectedPeriod.start_date},to_date:{to:U.selectedPeriod.end_date},public_holiday:!0,type_id:{IN:e.keys(U.absenceTypes)}},null,F,null,!1).then(function(e){U.sections.holidays.data=e.list})}function k(e){return e.loading=!0,e.loadLeaveRequests().then(b.bind(this,e)).then(function(){e.loading=!1})}function S(){return l.valuesOf("hrleaveandabsences_leave_request_status").then(function(t){U.leaveRequestStatuses=e.indexBy(t,"value")})}function L(t){return n.resolve().then(function(){return t.map(function(t){var n=e.find(U.entitlements,function(e){return e.id===t.id});return t.breakdown.map(function(t){return e.assign(e.clone(t),{type_id:n.type_id})})})}).then(function(e){return Array.prototype.concat.apply([],e)})}function M(e){return n.resolve().then(function(){return e.map(function(e){return{expiry_date:e.toil_expiry_date,type:{label:"Accrued TOIL"}}})})}function O(){u.subscribe("LeaveRequest::new",function(){U.refresh()}),u.subscribe("LeaveRequest::edit",function(){U.refresh()}),u.subscribe("LeaveRequest::statusUpdate",v),u.subscribe("LeaveRequest::delete",function(e){$(e)})}function $(t){e.forEach(U.sections,function(n,a){n.dataIndex[t.id]&&(e.remove(n.data,function(e){return e.id===t.id}),delete n.dataIndex[t.id],x(t,a))})}function x(e,t){var n=U.absenceTypes[e.type_id],a="pending"===t?"future":"current";n.balanceChanges[t]-=e.balance_change,n.remainder[a]-=e.balance_change}function B(){U.loading.content=!0,n.all([C(),P()]).then(function(){U.loading.content=!1}).then(function(){return n.all([T(),h()])})}function E(e){var t=U.sections[e];t.open=!t.open,t.open&&!t.data.length&&k(t)}function N(t){return e.find(U.leaveRequestStatuses,function(e){return e.name===t}).value}t.debug("Component: staff-leave-report");var F="from_date ASC",j={delete:$,cancel:p},U=this;U.absencePeriods=[],U.absenceTypes={},U.absenceTypesFiltered={},U.dateFormat=d.DATE_FORMAT,U.leaveRequestStatuses={},U.selectedPeriod=null,U.role="absence-tab"===a.section?"admin":"staff",U.loading={content:!0,page:!0},U.sections={approved:{open:!1,data:[],dataIndex:{},loading:!1,loadLeaveRequests:q},entitlements:{open:!1,data:[],dataIndex:{},loading:!1,loadLeaveRequests:D},expired:{open:!1,data:[],dataIndex:{},loading:!1,loadLeaveRequests:A},holidays:{open:!1,data:[],dataIndex:{},loading:!1,loadLeaveRequests:I},pending:{open:!1,data:[],dataIndex:{},loading:!1,loadLeaveRequests:w},other:{open:!1,data:[],dataIndex:{},loading:!1,loadLeaveRequests:R}},U.labelPeriod=g,U.refresh=B,U.toggleSection=E,function(){n.all([S(),y(),_()]).then(function(){U.loading.page=!1}).then(function(){return n.all([C(),P()])}).then(function(){U.loading.content=!1}),O()}()}n.component("staffLeaveReport",{bindings:{contactId:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/staff-leave-report.html"}],controllerAs:"report",controller:["$log","$q","$rootScope","checkPermissions","AbsencePeriod","AbsenceType","Entitlement","LeaveRequest","OptionGroup","pubSub","HR_settings","shared-settings",a]})}),define("leave-absences/shared/controllers/sub-controllers/leave-request.controller",["leave-absences/shared/modules/controllers"],function(e){function t(e,t,n){function a(){return s._canCalculateChange()}function o(){return t.resolve()}e.debug("LeaveRequestCtrl");var s=n;s.checkSubmitConditions=a,s.initChildController=o}e.controller("LeaveRequestCtrl",t),t.$inject=["$log","$q","parentCtrl"]}),define("leave-absences/shared/controllers/sub-controllers/sick-request.controller",["common/lodash","leave-absences/shared/modules/controllers"],function(e,t){function n(t,n,a,o){function s(){return d._canCalculateChange()&&d.request.sickness_reason}function r(){return n.all([l(),u()])}function i(t){var n=d.request.getDocumentArray()
;return!!e.find(n,function(e){return e===t})}function c(t){return!!e.find(d.sicknessDocumentTypes,function(e){return e.value===t})}function l(){return a.valuesOf("hrleaveandabsences_leave_request_required_document").then(function(e){d.sicknessDocumentTypes=e})}function u(){return a.valuesOf("hrleaveandabsences_sickness_reason").then(function(t){d.sicknessReasons=e.indexBy(t,"name")})}t.debug("SicknessRequestCtrl");var d=o;d.checkSubmitConditions=s,d.isChecked=i,d.isDocumentInRequest=c,d.initChildController=r}t.controller("SicknessRequestCtrl",n),n.$inject=["$log","$q","api.optionGroup","parentCtrl"]}),define("leave-absences/shared/controllers/sub-controllers/toil-request.controller",["common/lodash","leave-absences/shared/modules/controllers"],function(e,t){function n(t,n,a,o,s,r){function i(){C.uiOptions.showBalance=!1,C.request.toil_to_accrue&&(C.loading.showBalanceChange=!0,C._toggleBalance(),C.balance.change.amount=+C.request.toil_to_accrue,C._calculateOpeningAndClosingBalance(),C.uiOptions.showBalance=!0,C.request.to_date_type=C.request.from_date_type="1",C.loading.showBalanceChange=!1)}function c(){return!C.canManage&&C.request.id?n.resolve(C.request.toil_expiry_date):C.requestCanExpire?f().catch(function(e){return e.length&&(C.errors=e),n.reject(e)}).then(function(e){return s.calculateToilExpiryDate(C.request.type_id,e)}).then(function(e){return C.request.toil_expiry_date=e,C.uiOptions.expiryDate=new Date(e),e}):(C.request.toil_expiry_date=!1,n.resolve(!1))}function l(){return C.uiOptions.multipleDays&&C.request.to_date||!C.uiOptions.multipleDays&&C.request.from_date}function u(){return!!(C.request.from_date&&C.request.to_date&&C.request.toil_duration&&C.request.toil_to_accrue)}function d(){C._reset(),C._calculateOpeningAndClosingBalance(),l()&&C.calculateToilExpiryDate()}function m(){C.request.toil_expiry_date=!1,C.uiOptions.expiryDate=null}function f(){return p(C.uiOptions.multipleDays?{hasErrors:!C.request.to_date&&!C.request.from_date,label:"To Date",value:C.request.to_date}:{hasErrors:!C.request.from_date,label:"From Date",value:C.request.from_date})}function p(e){if(e.hasErrors){var t="Please select "+e.label+" to find expiry date";return n.reject([t])}return e.value?n.resolve(e.value):n.reject([])}function h(){return C.request.to_date_type=C.request.from_date_type="1",g().then(function(){return v(),y()})}function v(){C.canManage&&(C.uiOptions.expiryDate=C._convertDateFormatFromServer(C.request.toil_expiry_date))}function b(){C.isMode("view")||a.$watch(function(){return C.request.toil_to_accrue},function(){i()})}function g(){return s.canExpire(C.request.type_id).then(function(e){C.requestCanExpire=e})}function _(e){var t=C.period.id;return C._checkAndSetAbsencePeriod(e).then(function(){if(t!==C.period.id)return C.uiOptions.multipleDays&&(C.uiOptions.showBalance=!1,C.uiOptions.toDate=null,C.request.to_date=null),n.all([C._loadAbsenceTypes(),C._loadCalendar()])})}function y(){return o.valuesOf("hrleaveandabsences_toil_amounts").then(function(t){C.toilAmounts=e.indexBy(t,"value")})}function q(e){return C.loadAbsencePeriodDatesTypes(e).then(function(){C._setMinMaxDate(),C._setDates(),C.updateBalance(),C.calculateToilExpiryDate()}).catch(function(e){C.errors=[e]})}function P(){C.uiOptions.expiryDate&&(C.request.toil_expiry_date=C._convertDateToServerFormat(C.uiOptions.expiryDate))}t.debug("ToilRequestCtrl");var C=r;C.requestCanExpire=!0,C.calculateBalanceChange=i,C.calculateToilExpiryDate=c,C.checkSubmitConditions=u,C.changeInNoOfDays=d,C.clearExpiryDate=m,C.initChildController=h,C.loadAbsencePeriodDatesTypes=_,C.updateAbsencePeriodDatesTypes=q,C.updateExpiryDate=P,function(){b()}()}t.controller("ToilRequestCtrl",n),n.$inject=["$log","$q","$rootScope","api.optionGroup","AbsenceType","parentCtrl"]}),define("leave-absences/shared/modules/services",["common/angular","common/modules/services"],function(e){"use strict";return e.module("leave-absences.services",["common.services"])}),define("leave-absences/shared/instances/absence-period.instance",["leave-absences/shared/modules/models-instances","common/moment","common/models/instances/instance","common/services/hr-settings"],function(e,t){"use strict";e.factory("AbsencePeriodInstance",["$log","ModelInstance","HR_settings",function(e,n,a){return e.debug("AbsencePeriodInstance"),n.extend({defaultCustomData:function(){return{current:!1}},transformAttributes:function(e){var n=t();return e.current=!1,t(e.start_date).isSameOrBefore(n,"day")&&t(e.end_date).isSameOrAfter(n,"day")&&(e.current=!0),e},isInPeriod:function(e){var n=a.DATE_FORMAT.toUpperCase(),o=t(e,n);return t(this.start_date).isSameOrBefore(o)&&t(this.end_date).isSameOrAfter(o)}})}])}),define("leave-absences/shared/apis/absence-period.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("AbsencePeriodAPI",["$log","api",function(e,t){return e.debug("AbsencePeriodAPI"),t.extend({all:function(t){return e.debug("AbsencePeriodAPI"),this.sendGET("AbsencePeriod","get",t).then(function(e){return e.values})}})}])}),define("leave-absences/shared/models/absence-period.model",["leave-absences/shared/modules/models","common/moment","leave-absences/shared/modules/shared-settings","leave-absences/shared/instances/absence-period.instance","leave-absences/shared/apis/absence-period.api","common/models/model","common/services/hr-settings"],function(e,t){"use strict";e.factory("AbsencePeriod",["$log","Model","AbsencePeriodAPI","AbsencePeriodInstance","shared-settings",function(e,n,a,o,s){return e.debug("AbsencePeriod"),n.extend({all:function(e){return a.all(e).then(function(e){return e.map(function(e){return o.init(e,!0)})})},current:function(){var e=t().format(s.serverDateFormat),n={start_date:{"<=":e},end_date:{">=":e}};return a.all(n).then(function(e){return e&&e.length?o.init(e[0],!0):null})}})}])}),define("leave-absences/shared/apis/public-holiday.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("PublicHolidayAPI",["$log","api",function(e,t){return e.debug("PublicHolidayAPI"),t.extend({all:function(t){return e.debug("PublicHolidayAPI"),this.sendGET("PublicHoliday","get",t).then(function(e){return e.values})}})}])}),define("leave-absences/shared/instances/public-holiday.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("PublicHolidayInstance",["$log","ModelInstance",function(e,t){return e.debug("PublicHolidayInstance"),t.extend({})}])}),define("leave-absences/shared/models/public-holiday.model",["common/moment","leave-absences/shared/modules/models","common/models/model","common/services/hr-settings","leave-absences/shared/apis/public-holiday.api","leave-absences/shared/instances/public-holiday.instance"],function(e,t){"use strict";t.factory("PublicHoliday",["$log","Model","PublicHolidayAPI","PublicHolidayInstance","shared-settings",function(t,n,a,o,s){return t.debug("PublicHoliday"),n.extend({all:function(e){return t.debug("PublicHoliday.all",e),a.all(e).then(function(e){return e.map(function(e){return o.init(e,!0)})})},isPublicHoliday:function(n){t.debug("PublicHoliday.isPublicHoliday",n);var o=e(n).format(s.serverDateFormat),r={date:o};return a.all(r).then(function(e){return!!e.length})}})}])}),define("leave-absences/shared/instances/sickness-request.instance",["common/lodash","leave-absences/shared/modules/models-instances","leave-absences/shared/instances/leave-request.instance"],function(e,t){"use strict";t.factory("SicknessRequestInstance",["LeaveRequestAPI","LeaveRequestInstance",function(t,n){return n.extend({defaultCustomData:function(){var t={sickness_reason:null,sickness_required_documents:"",request_type:"sickness"};return e.assign({},n.defaultCustomData(),t)},getDocumentArray:function(){return this.sickness_required_documents?this.sickness_required_documents.split(","):[]},toggleDocument:function(t){var n=this.getDocumentArray(),a=n.indexOf(t);e.contains(n,t)?n.splice(a,1):n.push(t),this.sickness_required_documents=n.join(",")},toAPIFilter:function(t,n,a){e.includes(["balance_change","dates","comments","files"],a)||(t[a]=this[a])}})}])}),define("leave-absences/shared/instances/toil-request.instance",["common/lodash","leave-absences/shared/modules/models-instances","leave-absences/shared/instances/leave-request.instance"],function(e,t){"use strict";t.factory("TOILRequestInstance",["LeaveRequestAPI","LeaveRequestInstance",function(t,n){return n.extend({defaultCustomData:function(){var t={toilDurationHours:"0",toilDurationMinutes:"0",request_type:"toil"};return e.assign({},n.defaultCustomData(),t)},transformAttributes:function(e){var t=Number(e.toil_duration);return t&&(e.toilDurationHours=Math.floor(t/60).toString(),e.toilDurationMinutes=(t%60).toString()),e},updateDuration:function(){this.toil_duration=60*Number(this.toilDurationHours)+Number(this.toilDurationMinutes)},toAPIFilter:function(t,n,a){e.includes(["balance_change","dates","comments","files","toilDurationHours","toilDurationMinutes"],a)||(t[a]=this[a])}})}])}),define("leave-absences/shared/controllers/request.controller",["common/angular","leave-absences/shared/modules/controllers","common/lodash","common/moment","common/models/contact","common/models/session.model","common/services/api/option-group","common/services/hr-settings","common/services/pub-sub","leave-absences/shared/models/absence-period.model","leave-absences/shared/models/absence-type.model","leave-absences/shared/models/entitlement.model","leave-absences/shared/models/leave-request.model","leave-absences/shared/models/public-holiday.model","leave-absences/shared/instances/leave-request.instance","leave-absences/shared/instances/sickness-request.instance","leave-absences/shared/instances/toil-request.instance"],function(e,t,n){"use strict";function a(t,a,o,s,r,i,c,l,u,d,m,f,p,h,v,b,g,_,y,q){function P(){"hours"===Ae.selectedAbsenceType.calculation_unit_name&&n.each(["from","to"],function(e){delete Ae.request[e+"_date_type"],"toil"===$()&&(Ae.request[e+"_date_amount"]="0")})}function C(){var e=Ae.requestStatuses[_.statusNames.awaitingApproval].value;ye.status_id===e&&e!==Ae.request.status_id&&u.publish("ManagerBadge:: Update Count")}function D(){var e=!!Ae.checkSubmitConditions&&Ae.checkSubmitConditions();return Ae.isMode("edit")&&(e=e&&F()),Ae.canManage&&Ae.requestStatuses&&(e=e&&!!Ae.getStatusFromValue(Ae.newStatusOnSave)),(e=e&&!!Ae.period.id)&&!Ae.isMode("view")}function A(){Ae.isSelfRecord?Ae.request.status_id=Ae.requestStatuses[_.statusNames.awaitingApproval].value:Ae.canManage&&(Ae.request.status_id=Ae.newStatusOnSave||Ae.request.status_id)}function T(){if(Ae.isMode("edit")&&!Ae.isRole("staff")&&"toil"!==$())return Ae.request.calculateBalanceChange(Ae.selectedAbsenceType.calculation_unit_name).then(function(e){if(+Ae.balance.change.amount!=+e.amount)return ie(e),a.reject()})}function R(){Ae.errors=[]}function w(){return Ae.request.create().then(me).then(function(){re("LeaveRequest::new")})}function I(){Ae.isRole("staff")||(Ae.request.change_balance=!0)}function k(){l.open({title:"Confirm Deletion?",copyCancel:"Cancel",copyConfirm:"Confirm",classConfirm:"btn-danger",msg:"This cannot be undone",onConfirm:function(){return Ae.request.delete().then(function(){Ae.dismissModal(),u.publish("LeaveRequest::delete",Ae.request)})}})}function S(){r.dismiss({$value:"cancel"})}function L(){var e=$();return"leave"===e?{is_sick:!1}:"sickness"===e?{is_sick:!0}:"toil"===e?{allow_accruals_request:!0}:void 0}function M(){return O(Ae.getStatusFromValue(Ae.request.status_id).name)}function O(e){return n.map(ge[e],function(e){return Ae.requestStatuses[e]})}function $(){return Ae.request?Ae.request.request_type:Ae.leaveType||null}function x(){return n.find(Ae.absenceTypes,function(e){return e.id===Ae.request.type_id})}function B(){return!Ae.request||e.equals({},Ae.requestStatuses)?[]:Ae.request.status_id?M():O("none")}function E(e){return n.find(Ae.requestStatuses,function(t){return t.value===e})}function N(e){Ae.errors=n.isArray(e)?e:[e],Ae.loading.absenceTypes=!1,Ae.submitting=!1}function F(){return!e.equals(ye,Ae.request.attributes())||Ae.fileUploader&&0!==Ae.fileUploader.queue.length||Ae.canManage&&Ae.newStatusOnSave}function j(){Ae.period=n.find(Ae.absencePeriods,function(e){return e.current})}function U(){return Ae.postContactSelection=!0,Ae.request.contact_id?a.all([Ae._loadAbsenceTypes()]).then(function(){le(),J(),H(),Ae.isMode("edit")&&ue(),Ae.postContactSelection=!1,Ae.staffMemberSelectionComplete=!0}).catch(function(e){if(e!==Ce)return a.reject(e)}):a.reject("The contact id was not set")}function W(){var e=[_.statusNames.moreInformationRequired,_.statusNames.approved,_.statusNames.rejected,_.statusNames.cancelled];ge.none=[_.statusNames.moreInformationRequired,_.statusNames.approved],ge.awaiting_approval=e,ge.more_information_required=e,ge.rejected=e,ge.approved=e,ge.cancelled=[_.statusNames.awaitingApproval].concat(e)}function H(){return Ae.canManage?m.find(Ae.request.contact_id).then(function(e){Ae.contactName=e.display_name}):a.resolve()}function G(){qe.push(o.$on("LeaveRequestPopup::requestObjectUpdated",ue),o.$on("LeaveRequestPopup::handleError",function(e,t){N(t)}),o.$on("LeaveRequestPopup::childComponent::register",function(){_e++}))}function V(){var e;Ae.request.id?(e=[Ae.requestStatuses[_.statusNames.approved].value,Ae.requestStatuses[_.statusNames.adminApproved].value,Ae.requestStatuses[_.statusNames.rejected].value,Ae.requestStatuses[_.statusNames.cancelled].value],Ae.mode="edit",Ae.isRole("staff")&&e.indexOf(Ae.request.status_id)>-1&&(Ae.mode="view")):Ae.mode="create"}function Y(){var e,t;Ae.request=Ae.leaveRequest||null,e=$(),t=Ae.initRequestAttributes(),"leave"===e?Ae.request=g.init(t):"sickness"===e?Ae.request=y.init(t):"toil"===e&&(Ae.request=q.init(t))}function z(){var e={};return Ae.request?e=Ae.request.attributes():Ae.canManage||(e={contact_id:Pe}),e}function X(){if(De="staff","my-leave"!==o.section)return i(_.permissions.admin.administer).then(function(e){e&&(De="admin")}).then(function(){return"staff"===De&&i(_.permissions.ssp.manage).then(function(e){e&&(De="manager")})}).finally(function(){Ae.canManage=Ae.isRole("manager")||Ae.isRole("admin")})}function J(){(Ae.isRole("admin")||Ae.isMode("create")&&Ae.isRole("manager"))&&(Ae.newStatusOnSave=Ae.requestStatuses[_.statusNames.approved].value)}function K(e){var t=Ae.getStatusFromValue(Ae.request.status_id);return!!t&&t.name===e}function Q(e){return Ae.request&&Ae.request.request_type===e}function Z(e){return Ae.mode===e}function ee(e){return De===e}function te(){return p.all().then(function(e){Ae.absencePeriods=e})}function ne(){return f.get().then(function(e){Pe=e.contactId})}function ae(){return Ae.selectedContactId?m.find(Ae.selectedContactId).then(function(e){Ae.managedContacts=[e]}):Ae.isRole("admin")?m.all().then(function(e){Ae.managedContacts=n.remove(e.list,function(e){return e.id!==Pe})}):m.find(Pe).then(function(e){return e.leaveManagees()}).then(function(e){Ae.managedContacts=e})}function oe(){return c.valuesOf("hrleaveandabsences_leave_request_status").then(function(e){Ae.requestStatuses=n.indexBy(e,"name")})}function se(e,t){var a;return t.map(function(t){return a=n.find(e,function(e){return e.id===t.type_id}),{id:t.type_id,title:a.title+" ( "+t.remainder.current+" ) ",remainder:t.remainder.current,allow_overuse:a.allow_overuse,calculation_unit_name:a.calculation_unit_name}})}function re(e){C(),u.publish(e,Ae.request),Ae.errors=[],Ae.dismissModal()}function ie(e){l.open({title:"Recalculate Balance Change?",copyCancel:"Cancel",copyConfirm:"Yes",classConfirm:"btn-warning",msg:"The leave balance change has updated since this leave request was created. Do you want to recalculate the balance change?",onConfirm:function(){o.$emit("LeaveRequestPopup::updateBalance")}})}function ce(e){return v.all({contact_id:Ae.request.contact_id,period_id:Ae.period.id,type_id:{IN:e.ids}},!0).then(function(t){if(Ae.absenceTypes=se(e.types,t),!Ae.absenceTypes.length)return a.reject(Ce)})}function le(){Ae.isMode("create")?(Ae.selectedAbsenceType=Ae.absenceTypes[0],Ae.request.type_id=Ae.selectedAbsenceType.id):Ae.selectedAbsenceType=x()}function ue(){ye=e.copy(Ae.request.attributes())}function de(){var e=Ae.request.status_id;if(!Ae.isMode("view")&&!Ae.submitting)return Ae.submitting=!0,A(),P(),Ae.request.isValid().then(T).then(I).then(function(){return Ae.isMode("edit")?pe():w()}).catch(function(t){Ae.request.status_id=e,t&&N(t)}).finally(function(){Ae.submitting=!1})}function me(){function e(e){e&&n.push(e),++s===_e&&(fe(),n.length>0?t.reject(n):t.resolve())}var t=a.defer(),n=[],s=0;return _e>0?o.$broadcast("LeaveRequestPopup::submit",e):t.resolve(),t.promise}function fe(){n.forEach(qe,function(e){e()})}function pe(){return Ae.request.update().then(me).then(function(){Ae.isRole("manager")?re("LeaveRequest::updatedByManager"):(Ae.isRole("staff")||Ae.isRole("admin"))&&re("LeaveRequest::edit")})}function he(){o.$broadcast("LeaveRequestPopup::updateBalance")}function ve(){return h.all(L()).then(h.loadCalculationUnits).then(function(e){return be={types:e,ids:e.map(function(e){return e.id})},ce(be)})}t.debug("RequestCtrl");var be,ge={},_e=0,ye={},qe=[],Pe="",Ce="No entitlement",De="",Ae=n.assign(this,d);Ae.absencePeriods=[],Ae.absenceTypes=[],Ae.canManage=!1,Ae.contactName=null,Ae.errors=[],Ae.fileUploader=null,Ae.staffMemberSelectionComplete=!1,Ae.loading={absenceTypes:!0},Ae.managedContacts=[],Ae.mode="",Ae.newStatusOnSave=null,Ae.period={},Ae.postContactSelection=!1,Ae.requestStatuses={},Ae.selectedAbsenceType={},Ae.submitting=!1,Ae.balance={closing:0,opening:0,change:{amount:0,breakdown:[]}},Ae.canSubmit=D,Ae.closeAlert=R,Ae.deleteLeaveRequest=k,Ae.dismissModal=S,Ae.getStatuses=B,Ae.getStatusFromValue=E,Ae.initAfterContactSelection=U,Ae.initRequestAttributes=z,Ae.isLeaveStatus=K,Ae.isLeaveType=Q,Ae.isMode=Z,Ae.isRole=ee,Ae.submit=de,Ae.updateBalance=he,Ae._loadAbsenceTypes=ve,function(){Ae.loading.absenceTypes=!0,W(),G(),a.all([ne(),X(),te(),oe()]).then(function(){return a.all([j(),Y()])}).then(function(){return V(),Ae.canManage&&!Ae.isMode("edit")&&ae()}).then(function(){if(Ae.selectedContactId&&(Ae.request.contact_id=Ae.selectedContactId),Ae.request.contact_id)return Ae.initAfterContactSelection()}).catch(N).finally(function(){Ae.loading.absenceTypes=!1})}()}t.controller("RequestCtrl",a),a.$inject=["$log","$q","$rootScope","$scope","$uibModalInstance","checkPermissions","api.optionGroup","dialog","pubSub","directiveOptions","Contact","Session","AbsencePeriod","AbsenceType","Entitlement","LeaveRequest","LeaveRequestInstance","shared-settings","SicknessRequestInstance","TOILRequestInstance"]}),define("leave-absences/shared/services/leave-popup.service",["common/lodash","leave-absences/shared/modules/services","common/services/notification.service","leave-absences/shared/controllers/request.controller"],function(e,t){"use strict";function n(e,t,n,a,o,s,r,i,c){function l(e){return i.get().then(function(t){return e.roleOf(t.contactId)}).then(function(e){return"none"!==e})}function u(e,n,o,r){a.open({appendTo:t.children().eq(0),templateUrl:s.sharedPathTpl+"components/leave-request-popup/leave-request-popup.html",controller:"RequestCtrl",controllerAs:"$ctrl",windowClass:"chr_leave-request-modal",resolve:{directiveOptions:function(){return{leaveType:n,leaveRequest:e,selectedContactId:o,isSelfRecord:r}},format:["DateFormat",function(e){return e.getDateFormat()}]}})}function d(e){return c.find(e).then(function(e){return l(e).then(function(t){t?u(e,e.request_type,e.contact_id,"my-leave"===n.section):o.error("Error","You dont have permission to see this leave request")})}).catch(function(e){o.error("Error",e)})}return e.debug("LeavePopup"),{openModal:u,openModalByID:d}}t.factory("LeavePopup",n),n.$inject=["$log","$rootElement","$rootScope","$uibModal","notificationService","shared-settings","DateFormat","Session","LeaveRequest"]}),define("leave-absences/absence-tab/modules/components",["common/angular"],function(e){return e.module("absence-tab.components",[])}),function(e){define("leave-absences/absence-tab/components/absence-tab-container.component",["leave-absences/absence-tab/modules/components"],function(t){function n(t,n,a){t.debug("Component: absence-tab-container"),n.section="absence-tab",this.contactId=e.adminId,function(){a.getDateFormat()}()}t.component("absenceTabContainer",{templateUrl:["settings",function(e){return e.pathTpl+"components/absence-tab-container.html"}],controllerAs:"absence",controller:n}),n.$inject=["$log","$rootScope","DateFormat"]})}(CRM),define("leave-absences/absence-tab/components/absence-tab-report.component",["leave-absences/absence-tab/modules/components"],function(e){function t(e){e.debug("Component: absence-tab-report")}e.component("absenceTabReport",{bindings:{contactId:"<"},templateUrl:["settings",function(e){return e.pathTpl+"components/absence-tab-report.html"}],controllerAs:"report",controller:["$log",t]})}),define("leave-absences/absence-tab/components/absence-tab-entitlements.component",["common/lodash","leave-absences/absence-tab/modules/components"],function(e,t){function n(e,t,n){function a(){return n.all().then(n.loadCalculationUnits).then(function(e){o.absenceTypes=e})}t.debug("Component: absence-tab-entitlements");var o=this;o.absenceTypes=[],o.loading={component:!0},function(){a().finally(function(){o.loading.component=!1})}()}t.component("absenceTabEntitlements",{bindings:{contactId:"<"},templateUrl:["settings",function(e){return e.pathTpl+"components/absence-tab-entitlements.html"}],controllerAs:"entitlements",controller:n}),n.$inject=["$q","$log","AbsenceType"]}),define("leave-absences/absence-tab/components/absence-tab-custom-work-pattern-modal.component",["common/moment","leave-absences/absence-tab/modules/components"],function(e,t){function n(t,n,a,o,s,r){function i(e){u.errorMessage=e}function c(){return r.get().then(function(e){u.workPatterns=e})}function l(){return o.valuesOf("hrjc_revision_change_reason").then(function(e){u.changeReasons=e})}t.debug("Component: absence-tab-custom-work-pattern-modal");var u=Object.create(this);return u.changeReasons=[],u.errorMessage="",u.saveInProgress=!1,u.workPatterns=[],u.loading={content:!0},u.selected={workPattern:null,effectiveDate:null,changeReason:null},u.uiOptions={effectiveDate:{show:!1,options:{startingDay:1,showWeeks:!1}}},function(){n.all([c(),l()]).finally(function(){u.loading.content=!1})}(),u.closeModal=function(){u.dismiss({$value:"cancel"})},u.closeAlert=function(){u.errorMessage=""},u.save=function(){var t=e(u.selected.effectiveDate).format(s.serverDateFormat);return u.saveInProgress=!0,r.assignWorkPattern(u.contactId,u.selected.workPattern.id,t,null,u.selected.changeReason).then(function(){a.$broadcast("CustomWorkPattern::Added"),u.closeModal()}).catch(i).finally(function(){u.saveInProgress=!1})},u}t.component("absenceTabCustomWorkPatternModal",{bindings:{contactId:"<",dismiss:"&"},templateUrl:["settings",function(e){return e.pathTpl+"components/absence-tab-custom-work-pattern-modal.html"}],controllerAs:"workPatternModal",controller:["$log","$q","$rootScope","OptionGroup","shared-settings","WorkPatternAPI",n]})}),define("leave-absences/absence-tab/components/absence-tab-work-patterns.component",["common/lodash","common/moment","leave-absences/absence-tab/modules/components","leave-absences/absence-tab/components/absence-tab-custom-work-pattern-modal.component"],function(e,t,n){function a(n,a,o,s,r,i,c,l,u,d){function m(){return d.workPatternsOf(g.contactId,{},!1).then(function(e){g.customWorkPatterns=e})}function f(){return d.default().then(function(e){g.defaultWorkPattern=e})}function p(){return u.valuesOf("hrjc_revision_change_reason").then(function(t){b=e.indexBy(t,"value")})}function h(e){var t=[m()];return e&&(t=t.concat(e)),g.loading.workPattern=!0,a.all(t).then(function(){v()}).finally(function(){g.loading.workPattern=!1})}function v(){var n,a=l.DATE_FORMAT.toUpperCase();g.customWorkPatterns=e(g.customWorkPatterns).map(function(e){return n=b[e.change_reason],e.change_reason_label=n?n.label:"",e.effective_date=e.effective_date?t(e.effective_date).format(a):"",e}).sortBy(function(e){return-t(e.effective_date,a).valueOf()}).value()}n.debug("Component: absence-tab-work-patterns");var b=[],g=Object.create(this);return g.customWorkPatterns=[],g.defaultWorkPattern=null,g.linkToWorkPatternListingPage=function(){var e=CRM.url("civicrm/contact/view",{cid:g.contactId,selectedChild:"absence"});return CRM.url("civicrm/admin/leaveandabsences/work_patterns",{cid:g.contactId,returnUrl:e})}(),g.loading={workPattern:!0},function(){h([p(),f(),c.getDateFormat()]),s.$on("CustomWorkPattern::Added",function(){h()})}(),g.deleteWorkPattern=function(e){i.open({title:"Confirm Deletion?",copyCancel:"Cancel",copyConfirm:"Confirm",classConfirm:"btn-danger",msg:"This cannot be undone",onConfirm:function(){d.unassignWorkPattern(e).then(function(){h()})}})},g.openModal=function(){r.open({appendTo:o.children().eq(0),template:'<absence-tab-custom-work-pattern-modal dismiss="$ctrl.dismiss()" contact-id="'+g.contactId+'"/>',controller:["$uibModalInstance",function(e){this.dismiss=e.dismiss}],controllerAs:"$ctrl"})},g}n.component("absenceTabWorkPatterns",{bindings:{contactId:"<"},templateUrl:["settings",function(e){return e.pathTpl+"components/absence-tab-work-patterns.html"}],controllerAs:"workpatterns",controller:["$log","$q","$rootElement","$rootScope","$uibModal","dialog","DateFormat","HR_settings","OptionGroup","WorkPattern",a]})}),define("leave-absences/absence-tab/components/annual-entitlement-change-log.component",["common/lodash","common/moment","leave-absences/absence-tab/modules/components","common/models/contract"],function(e,t,n){function a(n,a,o,s,r){function i(){return u().then(function(e){q=q.concat(e)})}function c(){var t=e.groupBy(q,"created_date");P.changeLogRows=e.map(t,d).sort(function(e,t){return t.date.diff(e.date)})}function l(e,t){var n,a,o=m(e);e.entitlements.forEach(function(s,r){n=o.entitlements.slice(0,r),a=e.entitlements.slice(r+1),t(s,n,a)})}function u(){return o.all({contact_id:P.contactId,period_id:P.periodId},!1).then(function(e){return e.map(function(e){return{comment:e.comment,contact_id:e.contact_id,created_date:e.created_date,editor_id:e.editor_id,entitlement_amount:e.value,entitlement_id:e.id,"entitlement_id.type_id":e.type_id}})})}function d(n,a){var o,s,r;return s=e.indexBy(n,"entitlement_id.type_id"),r=P.absenceTypes.map(function(t){return o=s[t.id],e.extend({calculation_unit:t.calculation_unit_name},o)}),{date:t(a),entitlements:r}}function m(e){var t;return t=P.changeLogRows.indexOf(e),P.changeLogRows[t+1]||{date:e.date.clone(),entitlements:e.entitlements.map(function(){return{}})}}function f(){for(var t,n,a,o=P.changeLogRows.length-1;o>=0;o--)if(t=P.changeLogRows[o],n=e.pluck(t.entitlements,"comment"),a=e.compact(n),1===a.length){var s=e.findIndex(n,"length");t.highlightedEntitlement=t.entitlements[s]}else a.length>1&&_(o)}function p(e,t){P.changeLogRows.splice(t,0,e)}function h(){return n.all({id:P.periodId}).then(function(e){P.absencePeriod=e[0]})}function v(e){return a.all().then(a.loadCalculationUnits).then(function(e){P.absenceTypes=e})}function b(){return o.logs({contact_id:P.contactId,period_id:P.periodId}).then(function(e){q=e})}function g(){var e,t;if(!(P.changeLogRows.length<=1))for(e=P.changeLogRows.length-2,t=P.changeLogRows.length-1;e>=0;){var n=P.changeLogRows[e],a=P.changeLogRows[t];n.entitlements.forEach(function(e,t){var n=a.entitlements[t];e.comment===n.comment&&delete e.comment}),e--,t--}}function _(e){var t,n,a=P.changeLogRows[e];l(a,function(o,s,r){o.comment&&(t=s.concat(o).concat(r),n={date:a.date.clone(),entitlements:t},n.highlightedEntitlement=o,p(n,e++))}),y(e)}function y(e){P.changeLogRows.splice(e,1)}var q=[],P=this;P.absencePeriod=null,P.absenceTypes=[],P.changeLogRows=[],P.loading={component:!0},function(){h().then(v).then(b).then(i).then(c).then(g).then(f).finally(function(){P.loading.component=!1})}()}n.component("annualEntitlementChangeLog",{bindings:{contactId:"<",periodId:"<",dismissModal:"&"},templateUrl:["settings",function(e){return e.pathTpl+"components/annual-entitlement-change-log.html"}],controllerAs:"changeLog",controller:a}),a.$inject=["AbsencePeriod","AbsenceType","Entitlement","OptionGroup","shared-settings"]}),function(e){define("leave-absences/absence-tab/components/annual-entitlements.component",["common/lodash","common/moment","leave-absences/absence-tab/modules/components","common/models/contact"],function(t,n,a){function o(a,o,s,r,i,c,l,u,d){function m(){y.absencePeriods=t.chain(y.absencePeriods).filter(function(e){return t.find(P,function(t){return t.period_id===e.id})}).sortBy(function(e){return-n(e.start_date).valueOf()}).value()}function f(){y.absenceTypes=t.filter(y.absenceTypes,function(e){return t.find(P,function(t){return t.type_id===e.id})})}function p(){return c.all().then(function(e){y.absencePeriods=e})}function h(){var e=t.uniq(t.map(P,function(e){return e.editor_id}));return u.all({id:{IN:e}}).then(function(e){q=t.indexBy(e.list,"contact_id")})}function v(){return l.all({contact_id:y.contactId}).then(function(e){P=e})}function b(e){r.open({appendTo:s.children().eq(0),templateUrl:"annual-entitlement-change-log-modal",controller:["$uibModalInstance",function(t){this.contactId=y.contactId,this.dismiss=t.dismiss,this.periodId=e}],controllerAs:"modal"})}function g(){y.absencePeriods=t.map(y.absencePeriods,function(e){var n=t.map(y.absenceTypes,function(n){var a=t.find(P,function(t){return t.type_id===n.id&&t.period_id===e.id});return a?{amount:a.value,calculation_unit:n.calculation_unit_name,comment:a.comment?{message:a.comment,author_name:q[a.editor_id].display_name,date:a.created_date}:null}:null});return{id:e.id,title:e.title,entitlements:n}})}function _(e){var t=e.message+"<br/><br/><strong>Last updated:<br/>By: "+e.author_name+"<br/>Date: "+n.utc(e.date).local().format("DD/M/YYYY HH:mm")+"</strong>";d.info("Calculation comment:",t)}a.debug("Component: annual-entitlements");var y=this,q=[],P=[];y.absencePeriods=[],y.loading={absencePeriods:!0},y.editEntitlementsPageUrl=function(t){var n=e.url("civicrm/contact/view",{cid:t,selectedChild:"absence"});return e.url("civicrm/admin/leaveandabsences/periods/manage_entitlements",{cid:t,returnUrl:n})}(y.contactId),y.openAnnualEntitlementChangeLog=b,y.showComment=_,function(){v().then(h).then(p).then(m).then(f).then(g).finally(function(){y.loading.absencePeriods=!1})}()}a.component("annualEntitlements",{bindings:{absenceTypes:"<",contactId:"<"},templateUrl:["settings",function(e){return e.pathTpl+"components/annual-entitlements.html"}],controllerAs:"entitlements",controller:o}),o.$inject=["$log","$q","$rootElement","$uibModal","AbsenceType","AbsencePeriod","Entitlement","Contact","notificationService"]})}(CRM),define("leave-absences/absence-tab/components/contract-entitlements.component",["common/lodash","common/moment","leave-absences/absence-tab/modules/components","common/models/contract"],function(e,t,n){function a(n,a,o,s,r,i){function c(){m.absenceTypes=e.filter(m.absenceTypes,function(t){return e.find(m.contracts,function(n){return e.find(n.info.leave,function(e){return e.leave_type===t.id})})})}function l(e){var n=o.DATE_FORMAT.toUpperCase();return e?t(e).format(n):""}function u(){return r.all({contact_id:m.contactId}).then(function(e){m.contracts=e})}function d(){m.contracts=e.sortBy(m.contracts,function(e){return t(e.info.details.period_start_date)}).map(function(t){var n=t.info,a=n.details,o=e.map(m.absenceTypes,function(t){var a=e.filter(n.leave,function(e){return e.leave_type===t.id})[0];return{amount:a?a.leave_amount:"",calculation_unit:t.calculation_unit_name}});return{position:a.position,start_date:l(a.period_start_date),end_date:l(a.period_end_date),absences:o}})}n.debug("Component: contract-entitlements");var m=this;m.contracts=[],m.loading={contracts:!0},function(){
i.getDateFormat().then(u).then(c).then(d).finally(function(){m.loading.contracts=!1})}()}n.component("contractEntitlements",{bindings:{absenceTypes:"<",contactId:"<"},templateUrl:["settings",function(e){return e.pathTpl+"components/contract-entitlements.html"}],controllerAs:"entitlements",controller:a}),a.$inject=["$log","$q","HR_settings","AbsenceType","Contract","DateFormat"]}),function(e){define("leave-absences/absence-tab/modules/settings",["common/angular"],function(t){return t.module("absence-tab.settings",[]).constant("settings",{contactId:e.vars.leaveAndAbsences.contactId,debug:e.debug,pathTpl:e.vars.leaveAndAbsences.baseURL+"/views/absence-tab/"})})}(CRM),define("leave-absences/absence-tab/modules/config",["common/angular","leave-absences/absence-tab/modules/settings"],function(e){return e.module("absence-tab.config",["absence-tab.settings"]).config(["$resourceProvider","$httpProvider","$logProvider","settings",function(e,t,n,a){n.debugEnabled(a.debug),e.defaults.stripTrailingSlashes=!1,t.defaults.headers.common["X-Requested-With"]="XMLHttpRequest"}])}),define("leave-absences/absence-tab/app",["common/angular","common/angularBootstrap","common/text-angular","common/directives/time-amount-picker.directive","common/directives/timepicker-select.directive","common/filters/angular-date/format-date","common/filters/time-unit-applier.filter","common/modules/dialog","common/modules/directives","common/services/check-permissions","common/services/angular-date/date-format","common/services/notification.service","leave-absences/shared/modules/shared-settings","leave-absences/shared/models/absence-type.model","leave-absences/shared/models/calendar.model","leave-absences/shared/models/entitlement.model","leave-absences/shared/models/leave-request.model","leave-absences/shared/models/work-pattern.model","leave-absences/shared/components/leave-calendar.component","leave-absences/shared/components/leave-calendar-day.component","leave-absences/shared/components/leave-calendar-legend.component","leave-absences/shared/components/leave-calendar-month.component","leave-absences/shared/components/leave-request-actions.component","leave-absences/shared/components/leave-request-popup-comments-tab.component","leave-absences/shared/components/leave-request-popup-details-tab.component","leave-absences/shared/components/leave-request-popup-files-tab","leave-absences/shared/components/leave-request-record-actions.component","leave-absences/shared/components/staff-leave-report.component","leave-absences/shared/controllers/sub-controllers/leave-request.controller","leave-absences/shared/controllers/sub-controllers/sick-request.controller","leave-absences/shared/controllers/sub-controllers/toil-request.controller","leave-absences/shared/models/absence-type.model","leave-absences/shared/models/calendar.model","leave-absences/shared/models/leave-request.model","leave-absences/shared/models/work-pattern.model","leave-absences/shared/models/absence-type.model","leave-absences/shared/models/entitlement.model","leave-absences/shared/modules/shared-settings","leave-absences/shared/services/leave-popup.service","leave-absences/absence-tab/components/absence-tab-container.component","leave-absences/absence-tab/components/absence-tab-report.component","leave-absences/absence-tab/components/absence-tab-entitlements.component","leave-absences/absence-tab/components/absence-tab-work-patterns.component","leave-absences/absence-tab/components/annual-entitlement-change-log.component","leave-absences/absence-tab/components/annual-entitlements.component","leave-absences/absence-tab/components/contract-entitlements.component","leave-absences/absence-tab/modules/config"],function(e){return e.module("absence-tab",["ngResource","ui.bootstrap","textAngular","common.angularDate","common.dialog","common.directives","common.filters","common.services","common.mocks","leave-absences.settings","leave-absences.models","leave-absences.components","leave-absences.controllers","leave-absences.models","leave-absences.services","leave-absences.settings","absence-tab.config","absence-tab.components"]).run(["$log","$rootScope","shared-settings","settings",function(e,t,n,a){e.debug("app.run"),t.sharedPathTpl=n.sharedPathTpl,t.settings=a}]),e}),function(e,t){var n=e.vars.leaveAndAbsences.baseURL+"/js/angular/src/leave-absences";t.config({urlArgs:"bust="+(new Date).getTime(),paths:{"leave-absences/shared":n+"/shared","leave-absences/absence-tab":n+"/absence-tab"}}),t(["leave-absences/shared/config"],function(){t(["leave-absences/absence-tab/app"],function(){document.dispatchEvent("function"==typeof window.CustomEvent?new CustomEvent("absenceTabReady"):function(){var e=document.createEvent("Event");return e.initEvent("absenceTabReady",!0,!0),e}())})})}(CRM,require),define("absence-tab",function(){});
//# sourceMappingURL=absence-tab.js.map