define(["common/lodash","leave-absences/shared/modules/apis","common/services/api"],function(t,e){"use strict";e.factory("WorkPatternAPI",["$log","api",function(e,n){function r(e){var n=t.clone(e);return n.workPattern=n["api.WorkPattern.get"].values[0],delete n["api.WorkPattern.get"],n}return e.debug("WorkPatternAPI"),n.extend({assignWorkPattern:function(e,n,r,a,o,i){return this.sendPOST("ContactWorkPattern","create",t.assign({},i,{contact_id:e,pattern_id:n,effective_date:r,effective_end_date:a,change_reason:o})).then(function(t){return t.values})},get:function(t){return this.sendGET("WorkPattern","get",t||{}).then(function(t){return t.values})},getCalendar:function(n,r,a){return e.debug("WorkPatternAPI.getCalendar",n,r,a),this.sendGET("WorkPattern","getcalendar",t.assign({},a,{contact_id:t.isArray(n)?{IN:n}:n,period_id:r}))},unassignWorkPattern:function(t){return this.sendPOST("ContactWorkPattern","delete",{id:t})},workPatternsOf:function(e,n,a){return this.sendGET("ContactWorkPattern","get",t.assign({},n,{contact_id:e,"api.WorkPattern.get":{id:"$value.pattern_id"}}),a).then(function(t){return t=t.values,t.map(r)})}})}])});